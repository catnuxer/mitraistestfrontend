{"version":3,"sources":["hook/WindowDimmension.js","constant/Colors.js","coreComponent/InputText.js","coreComponent/Button.js","coreComponent/ItemSelectOptions.js","coreComponent/SelectOptions.js","baseComponent/DobButton.js","coreComponent/RadioButton.js","baseComponent/GenderOptions.js","component/Footer.js","component/RegistrationForm.js","actions/Registration.js","constant/Registration.js","theme/PrimaryTheme.js","template/Registration.js","reducers/ErrorHandling.js","constant/ErrorHandling.js","reducers/Registration.js","reducers/index.js","saga/Registration.js","saga/index.js","persist/index.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","InputText","props","React","value","setValue","Style","container","overflow","display","position","input","flexGrow","padding","border","marginBottom","fontSize","outline","boxShadow","style","type","onChange","event","target","placeholder","label","MyButton","Button","color","variant","fullWidth","onClick","ItemSelectOptions","open","styleItem","content","labelItems","cursor","textAlign","float","borderBottom","labelContent","marginLeft","show","itemSelect","length","background","WebkitBoxShadow","MozBoxShadow","zIndex","top","left","right","maxHeight","map","item","index","key","toString","className","onSelect","styles","filterButtonStyle","Color","labelFilterStyleButton","labelFilterStyleIcon","SelectOptions","state","this","setState","labelButton","handleClick","bind","data","handleFilterStyle","renderButtonFilter","renderItemSelectOption","Component","propTypes","PropTypes","array","isRequired","func","withStyles","theme","dob","paddingRight","classes","WindowDimmension","xsDob","smDob","currentMonth","Date","getMonth","setDay","month","setMonth","year","setYear","rangeDay","setRangeDay","labelDay","setLabelDay","labelMonth","setLabelMonth","labelYear","setLabelYear","getDay","y","m","date","getDate","day","i","a","push","Grid","xs","sm","moment","monthsShort","obj","onChangeMonth","x","handleClickMonth","onChangeDay","minYear","getFullYear","unshift","getYear","onChangeYear","handleClickYear","RadioButton","FormControlLabel","control","Radio","checked","GenderOptions","align","Footer","marginTop","Colors","contentAlign","connect","ErrorHandling","Registration","errorCode","errorMessage","mobileNumber","firstName","lastName","gender","email","showLoginButton","sagaRegistration","setStateRegistration","keyState","valState","payload","setDobStateRegistration","keyDob","valDob","root","grid","margin","paper","spacing","palette","text","secondary","title","Fragment","Container","smSize","Paper","elevation","Typography","component","val","console","log","primary","light","main","dark","contrastText","error","success","status","danger","typography","button","fontWeight","createMuiTheme","PrimaryTheme","initState","showErrorComponent","action","code","message","newState","dobState","__doRegister","doRegister","rootSaga","select","takeEvery","all","fork","registration","RootPersistedConfig","timeout","storage","whitelist","blacklist","composeEnhancers","compose","persistedReducer","persistReducer","combineReducers","sagaMiddleware","createSagaMiddleware","middlewares","logger","store","createStore","applyMiddleware","run","configureStore","FabelioApp","Boolean","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","unregister","catch"],"mappings":"uSAEA,SAASA,IAAuB,IAAD,EACwBC,OACnD,MAAO,CACHC,MAHuB,EACnBC,WAGJC,OAJuB,EACAC,aAOhB,SAASC,IAAuB,IAAD,EACMC,mBAC5CP,KAFsC,mBACnCQ,EADmC,KACjBC,EADiB,KAc1C,OATAC,qBAAU,WACV,SAASC,IACLF,EAAoBT,KAIpB,OADJC,OAAOW,iBAAiB,SAAUD,GACvB,kBAAMV,OAAOY,oBAAoB,SAAUF,MACnD,IAEIH,ECxBX,IAUe,EAVC,UAUD,EATG,UASH,EARC,UAQD,EAPD,UAOC,EAJE,UAIF,EAHD,OCyCCM,MA7Cf,SAAmBC,GAAQ,IAAD,EAEIC,IAAMT,SAAS,IAFnB,mBAEfU,EAFe,KAERC,EAFQ,KAOhBC,EAAQ,CACVC,UAAW,CACPC,SAAU,SACVC,QAAS,OACTC,SAAU,YAEdC,MAAO,CACHC,SAAU,EACVvB,MAAO,OACPwB,QAAS,GACTC,OAAO,kBACPC,aAAc,GACdC,SAAU,IAEd,WAAY,CACRC,QAAS,OACTH,OAAO,kBACPI,UAAW,oBAInB,OACI,yBAAKC,MAAOb,EAAMC,WACd,2BACIa,KAAK,OACLD,MAAOb,EAAMK,MACbU,SA9BS,SAACC,GAClBjB,EAASiB,EAAMC,OAAOnB,OACtBF,EAAMmB,SAASC,EAAMC,OAAOnB,QA6BpBA,MAAOA,EACPoB,YAAatB,EAAMuB,U,QC3BpBC,MARf,SAAkBxB,GACd,OACI,kBAACyB,EAAA,EAAD,CAAQC,MAAM,YAAYC,QAAQ,YAAYC,WAAW,EAAMC,QAAS,kBAAM7B,EAAM6B,YAC/E7B,EAAMuB,Q,wDC0EJO,MAvEf,SAA2B9B,GAEvB,IAmBqB+B,EAnBfC,EAAY,CACdC,QAAS,CACL9C,MAAO,QAEX+C,WAAY,CACRC,OAAQ,UACRhD,MAAO,OACPiD,UAAW,OACXC,MAAO,OACP1B,QAAS,WACT2B,aAAc,kCACd/B,QAAS,gBAEbgC,aAAc,CACVC,WAAY,GACZ1B,SAAU,KAqBX2B,EAAoBzC,EAApByC,KAAMC,EAAc1C,EAAd0C,WACb,OAAGA,EAAWC,OAAS,EACZ,KAIP,yBAAK1B,OAvBYc,EAuBOU,EAvBG,CAC3BtD,MAAO,OACPyD,WAAY,QACZhC,OAAQ,kCACRiC,gBAAiB,wCACjBC,aAAc,wCACd9B,UAAW,wCACXR,SAAU,WACVuC,OAAQ,EACRC,IAAK,GACLC,KAAM,EACNC,MAAO,EACP3C,QAASwB,EAAO,QAAU,OAC1BoB,UAAW,IACX7C,SAAU,YAWFoC,EAAWU,KAAI,SAACC,EAAMC,GACtB,OACI,yBACIC,IAAKD,EAAME,WACXvC,MAAOe,EAAUC,QACjBwB,UAAW,YACX,yBACIxC,MAAOe,EAAUE,WACjBL,QAAS,kBAAM7B,EAAM0D,SAASL,KAC9B,0BAAMpC,MAAOe,EAAUO,cAAec,EAAK9B,c,iBC1DjEoC,EAAS,CACXtD,UAAW,CACPG,SAAU,YAEdoD,kBAAmB,CACfhD,OAAO,aAAD,OAAeiD,IAEzBC,uBAAwB,CACpBhD,SAAU,GACVuB,MAAO,OACP1B,QAAS,IAEboD,qBAAsB,CAClB1B,MAAO,UAmEA2B,E,YA9DX,WAAYhE,GAAQ,IAAD,8BACf,4CAAMA,KACDiE,MAAQ,CACTlC,MAAM,GAHK,E,iFAQfmC,KAAKC,SAAS,CAACpC,MAAOmC,KAAKD,MAAMlC,S,oCAIjCmC,KAAKC,SAAS,CAACpC,MAAOmC,KAAKD,MAAMlC,S,2CAOhB,IACVqC,EAAeF,KAAKlE,MAApBoE,YACP,OACI,yBAAKnD,MAAO0C,EAAOC,kBAAmBH,UAAW,WAAY5B,QAASqC,KAAKG,YAAYC,KAAKJ,OACxF,0BAAMjD,MAAO0C,EAAOG,wBAAyBM,GAC7C,0BAAMnD,MAAO0C,EAAOI,sBAChB,kBAAC,IAAD,CAAmBrC,MAAM,UAAUZ,SAAU,c,+CAUpC,IAAD,OACbyD,EAAQL,KAAKlE,MAAbuE,KACP,OACI,kBAAC,EAAD,CACI9B,KAAMyB,KAAKD,MAAMlC,KACjBW,WAAY6B,EACZb,SAAU,SAACxD,GAAD,OAAW,EAAKF,MAAM0D,SAASxD,Q,+BAK5C,IAAD,OACJ,OACI,yBAAKe,MAAO0C,EAAOtD,UAAWwB,QAAS,kBAAM,EAAK2C,sBAC7CN,KAAKO,qBACLP,KAAKQ,8B,GAnDMC,a,iBCoG5BX,EAAcY,UAAY,CACtBL,KAAMM,IAAUC,MAAMC,WACtBrB,SAAUmB,IAAUG,KAAKD,YAEdE,mBAvHA,SAAAC,GAAK,MAAK,CACrBC,IAAK,CACDC,aAAc,EACdvE,aAAc,OAoHPoE,EAzGf,SAAmBjF,GAAQ,IACfqF,EAAYrF,EAAZqF,QACAlG,EAAUmG,IAAVnG,MAEFoG,EAAQ,WACV,OAAGpG,EAAQ,IAAY,GAChB,GAGLqG,EAAQ,WACV,OAAGrG,EAAQ,IAAY,GAChB,GAGLsG,GAAe,IAAIC,MAAOC,WAAa,EAdvB,EAeAnG,mBAAS,CAACU,MAAO,KAAMqB,MAAO,MAf9B,mBAeVqE,GAfU,aAgBIpG,mBAAS,CAACU,MAAOuF,EAAclE,MAAO,QAhB1C,mBAgBfsE,EAhBe,KAgBRC,EAhBQ,OAiBEtG,mBAAS,CAACU,MAAO,OAAQqB,MAAO,SAjBlC,mBAiBfwE,EAjBe,KAiBTC,EAjBS,OAkBUxG,mBAAS,CAAC,IAlBpB,mBAkBfyG,EAlBe,KAkBLC,EAlBK,OAmBU1G,mBAAS,QAnBnB,mBAmBf2G,EAnBe,KAmBLC,EAnBK,OAoBc5G,mBAAS,SApBvB,mBAoBf6G,EApBe,KAoBHC,EApBG,OAqBY9G,mBAAS,QArBrB,mBAqBf+G,EArBe,KAqBJC,EArBI,KA6ChBC,EAAS,SAACC,EAAGC,GAGf,IAFA,IAAMC,EAAO,IAAIlB,KAAKgB,EAAGC,EAAG,GAAGE,UAC3BC,EAAM,GACDC,EAAI,EAAGA,GAAIH,EAAMG,IAAK,CAC3B,IAAMC,EAAaD,EACnBD,EAAIG,KAAK,CAAC/G,MAAO8G,EAAGzF,MAAOwF,IAE/B,OAAOD,GAyBX,OACI,kBAACI,EAAA,EAAD,CAAM7G,WAAS,EAACgD,MAAI,EAAC8D,GAAI,IACrB,kBAACD,EAAA,EAAD,CAAM7D,MAAI,EAAC8D,GAAI5B,IAAS6B,GAAI5B,IAASvE,MAAO,CAAEmE,aAAcjG,EAAQ,IAAM,GAAK,GAAIsE,UAAW4B,EAAQF,KAClG,kBAAC,EAAD,CACIf,YAAaiC,EACb9B,KA3BC,WAGb,IAFA,IAAMoC,EAAIU,IAAOC,cACbzB,EAAQ,GACHkB,EAAI,EAAGA,GAAIJ,EAAEhE,OAAQoE,IAAK,CAC/B,IAAMC,EAAaD,EACnBlB,EAAMoB,KAAK,CAAC/G,MAAO8G,EAAGzF,MAAOoF,EAAEI,EAAI,KAEvC,OAAOlB,EAoBWF,GACNjC,SAAU,SAACxD,GAAD,OA5D1B,SAA0BqH,GACtBzB,EAASyB,GACTvH,EAAMwH,cAAcD,EAAIrH,OACxB,IAAMuH,EAAIhB,EAAOV,EAAK7F,MAAOqH,EAAIrH,OACjCgG,EAAYuB,GACZnB,EAAciB,EAAIhG,OAuDemG,CAAiBxH,OAE9C,kBAACgH,EAAA,EAAD,CAAM7D,MAAI,EAAC8D,GAAI5B,IAAS6B,GAAI5B,IAASvE,MAAO,CAAEmE,aAAcjG,EAAQ,IAAM,GAAK,GAAIsE,UAAW4B,EAAQF,KAClG,kBAAC,EAAD,CACIf,YAAa+B,EACb5B,KAAM0B,EACNvC,SAAU,SAACxD,GAAD,OAjDtB0F,EADoB2B,EAkD4BrH,GAhDhDF,EAAM2H,YAAYJ,EAAIrH,YACtBkG,EAAYmB,EAAIhG,OAHpB,IAAwBgG,MAoDhB,kBAACL,EAAA,EAAD,CAAM7D,MAAI,EAAC8D,GAAI5B,IAAS6B,GAAI5B,IAAS/B,UAAW4B,EAAQF,KACpD,kBAAC,EAAD,CACIf,YAAamC,EACbhC,KA7BA,WAIZ,IAHA,IACIwB,EAAO,GACP6B,GAFS,IAAIlC,MAEEmC,cACVd,EAAI,EAAGA,GAAKa,EAASb,IACvBA,EAAI,MACHhB,EAAK+B,QAAQ,CAAC5H,MAAO6G,EAAGxF,MAAOwF,IAGvC,OAAOhB,EAoBWgC,GACNrE,SAAU,SAACxD,GAAD,OAhE1B,SAAyBqH,GACrBvB,EAAQuB,GACRvH,EAAMgI,aAAaT,EAAIrH,OACvB,IAAMuH,EAAIhB,EAAOc,EAAIrH,MAAO2F,EAAM3F,OAClCgG,EAAYuB,GACZjB,EAAae,EAAIhG,OA2DgB0G,CAAgB/H,W,iBCxF1CgI,MAzBf,SAAqBlI,GAAQ,IAAD,EAEER,oBAAS,GAFX,mBAEV2E,GAFU,WASxB,OACI,kBAACgE,EAAA,EAAD,CACIC,QACI,kBAACC,EAAA,EAAD,CAAOC,QAAStI,EAAMsI,UAE1B/G,MAAOvB,EAAMuB,MACbJ,SAXa,SAAAC,GACjB+C,EAAS/C,GACTpB,EAAMmB,SAASC,OCmBRmH,MAxBf,SAAuBvI,GACnB,OACI,kBAACkH,EAAA,EAAD,CAAM7G,WAAS,EAACgD,MAAI,EAAC8D,GAAI,IACrB,kBAACD,EAAA,EAAD,CAAM7D,MAAI,EAAC8D,GAAI,EAAGC,GAAI,EAAGoB,MAAO,QAC5B,kBAAC,EAAD,CACIjH,MAAO,OACP+G,QAA2B,IAAlBtI,EAAMsI,QACfnH,SAAU,SAACC,GAAD,OAAWpB,EAAMmB,SAAS,OAE5C,kBAAC+F,EAAA,EAAD,CAAM7D,MAAI,EAAC8D,GAAI,EAAGC,GAAI,EAAGoB,MAAO,QAC5B,kBAAC,EAAD,CACIjH,MAAO,SACP+G,QAA2B,IAAlBtI,EAAMsI,QACfnH,SAAU,SAACC,GAAD,OAAWpB,EAAMmB,SAAS,SCMzCsH,MAbf,SAAgBzI,GACZ,OACI,6BACI,yBAAKiB,MAAO,CAAEyH,UAAW,GAAIvJ,MAAO,OAAQwB,QAAS,GAAIiC,WAAY+F,EAAkBC,aAAc,WACjG,wBAAI3H,MAAO,CAAES,MAAOiH,EAAcvG,UAAW,WAA7C,WAEJ,yBAAKnB,MAAO,CAAEyH,UAAW,GAAIvJ,MAAO,OAAQwB,QAAS,GAAIiC,WAAY+F,EAAiBC,aAAc,cCiEhH,IAKeC,eALH,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,aAGzB,MAAO,CAAEC,UAF2BF,EAA5BE,UAEYC,aAFgBH,EAAjBG,aAEeC,aADiDH,EAA3EG,aACwCC,UADmCJ,EAA7DI,UACqCC,SADwBL,EAAlDK,SACoCjE,IADc4D,EAAxC5D,IAC+BkE,OADSN,EAAnCM,OACkCC,MADCP,EAA3BO,MACiCC,gBADNR,EAApBQ,mBAGvC,CAACC,iBCjDG,WAC5B,MAAO,CACHtI,KChCyB,sBF+EcuI,qBCzEX,SAACC,EAAkBC,GACnD,MAAO,CACHzI,KCV8B,yBDW9B0I,QAAS,CAAEF,WAAUC,cDsEwCE,wBC3D9B,SAACC,EAAgBC,GACpD,MAAO,CACH7I,KCvBkC,6BDwBlC0I,QAAS,CAAEE,SAAQC,aDwDZlB,CAAgF5D,aA1EhF,SAAAC,GAAK,MAAK,CACrB8E,KAAM,CACFtJ,SAAU,GAEduJ,KAAM,CACFC,OAAO,YAEXC,MAAO,CACHxJ,QAASuE,EAAMkF,QAAQ,GACvBhI,UAAW,SACXV,MAAOwD,EAAMmF,QAAQC,KAAKC,UAC1B3H,WAAY+F,GAEhB6B,MAAO,CACHpI,UAAW,OACXvB,aAAc,OA2DyEoE,EAnD/F,SAA0BjF,GAAQ,IACtBqF,EAAYrF,EAAZqF,QACAmE,EAAoExJ,EAApEwJ,iBAAkBC,EAAkDzJ,EAAlDyJ,qBAMtBJ,GANwErJ,EAA5B6J,wBAS5C7J,EAPAkJ,aAOAlJ,EANAmJ,UAMAnJ,EALAoJ,SAKApJ,EAJAmF,IAIAnF,EAHAqJ,QAKIlK,GAFJa,EAFAsJ,MAEAtJ,EADAuJ,gBAEgCvJ,EAA5BgJ,UAA4BhJ,EAAjBiJ,aACD3D,IAAVnG,OAOR,OACI,kBAAC,IAAMsL,SAAP,KACI,kBAACC,EAAA,EAAD,CAAWtD,GAAI,IACX,kBAACF,EAAA,EAAD,CAAM7D,MAAI,EAAC8D,GAAI,GAAIC,GAThB,SAACjI,GACZ,OAAGA,EAAQ,MAAQA,EAAQ,IAAY,EACpCA,EAAQ,IAAY,GAChB,EAMwBwL,CAAOxL,GAAQsE,UAAW4B,EAAQ4E,MACrD,kBAACW,EAAA,EAAD,CAAOC,UAAW,EAAGpH,UAAW4B,EAAQ8E,OACpC,kBAACW,EAAA,EAAD,CAAYnJ,QAAQ,KAAKoJ,UAAU,KAAKtH,UAAW4B,EAAQmF,MAAO9I,MAAM,WAAxE,gBACA,kBAAC,EAAD,CAAWH,MAAM,gBAAgBJ,SAAU,SAAC6J,GAAD,OAASC,QAAQC,IAAIF,IAAM7L,MAAOA,IAC7E,kBAAC,EAAD,CAAWoC,MAAM,aAAaJ,SAAU,SAAC6J,GAAD,OAASC,QAAQC,IAAIF,IAAM7L,MAAOA,IAC1E,kBAAC,EAAD,CAAWoC,MAAM,YAAYJ,SAAU,SAAC6J,GAAD,OAASC,QAAQC,IAAIF,IAAM7L,MAAOA,IACzE,kBAAC,EAAD,CACIqI,cAAe,SAACtH,GAAD,OAAW+K,QAAQC,IAAI,gBAAiBhL,IACvDyH,YAAa,SAACzH,GAAD,OAAW+K,QAAQC,IAAI,cAAehL,IACnD8H,aAAc,SAAC9H,GAAD,OAAW+K,QAAQC,IAAI,eAAgBhL,MACzD,kBAAC,EAAD,CACIoI,QAASe,EACTlI,SAAU,SAACjB,GAAD,OAAWuJ,EAAqB,SAAUvJ,MACxD,kBAAC,EAAD,CAAWqB,MAAM,QAAQJ,SAAU,SAAC6J,GAAD,OAASC,QAAQC,IAAIF,IAAM7L,MAAOA,IACrE,kBAAC,EAAD,CAAQoC,MAAO,WAAYM,QAAS,kBAAM2H,SAGlD,kBAAC,EAAD,Y,iBG1ED,GACXa,QAAS,CACLc,QAAS,CACLC,MAAOzC,EACP0C,KAAM1C,EACN2C,KAAM3C,EACN4C,aAAc,QAElBhB,UAAW,CACPa,MAAOzC,EACP0C,KAAM1C,EACN2C,KAAM3C,EACN4C,aAAc,QAElBC,MAAO,CACHJ,MAAOzC,EACP0C,KAAM1C,EACN2C,KAAM3C,EACN4C,aAAc,QAElBE,QAAS,CACLL,MAAOzC,EACP0C,KAAM1C,EACN2C,KAAM3C,EACN4C,aAAc,SAGtBG,OAAQ,CACJC,OAAQ,UAGZC,WAAY,CACRC,OAAQ,CACJC,WAAY,IACZ1J,UAAW,gBCrBvB,IAIeyG,eAJH,SAAC,GACT,OADiB,eACV,KAGiB,GAAbA,EAbf,WACI,IAAI3D,EAAQ6G,YAAeC,GAC3B,OACI,kBAAC,IAAD,CAAkB9G,MAAOA,GACrB,kBAAC,EAAD,U,wBCJN+G,GAAY,CACdjD,UAAW,GACXC,aAAc,GACdiD,oBAAoB,GAGT,SAASpD,KAA0C,IAA5B7E,EAA2B,uDAAnBgI,GAAWE,EAAQ,uCAC7D,OAAQA,EAAOjL,MACX,ICLyB,oBDKzB,MAE4BiL,EAAOvC,QAAxBwC,EAFX,EAEWA,KAAMC,EAFjB,EAEiBA,QAEb,sBACOpI,EADP,CAEI+E,UAAWoD,EACXnD,aAAcoD,IAGtB,ICjB0B,qBDkBtB,OAAO,eACApI,EADP,CAEIiI,oBAAoB,IAG5B,ICtB0B,qBDuBtB,OAAO,eACAjI,EADP,CAEIiI,oBAAoB,IAE5B,QACI,OAAOjI,GE9BnB,IAAMgI,GAAY,CACd/C,aAAe,GACfC,UAAW,GACXC,SAAU,GACVjE,IAAK,CACD2B,IAAK,GACLjB,MAAO,GACPE,KAAM,IAEVsD,OAAQ,EACRC,MAAO,GACPC,iBAAiB,GASN,SAASR,KAAyC,IAA5B9E,EAA2B,uDAAnBgI,GAAWE,EAAQ,uCAC5D,OAAQA,EAAOjL,MACX,ILtB8B,yBKsB9B,MACmCiL,EAAOvC,QAA9BF,EADZ,EACYA,SAAUC,EADtB,EACsBA,SACZ2C,EAAQ,eAAOrI,GAErB,OADAqI,EAAS5C,GAAYC,EACd,eACA1F,EADP,GAEOqI,GAGX,IL9BkC,6BK8BlC,MAC+BH,EAAOvC,QAA1BE,EADZ,EACYA,OAAQC,EADpB,EACoBA,OACVwC,EAAQ,eAAOtI,GAErB,OADAsI,EAASpH,IAAI2E,GAAUC,EAChB,eACA9F,EADP,CAEIkB,IAAI,eAAKoH,KAGjB,ILrCsC,iCKsClC,OAAO,eACAtI,EADP,CAEIsF,iBAAiB,IAEzB,QACI,OAAOtF,GChDJ,I,uECDLuI,I,aAMOC,I,aAIQC,IAVzB,SAAUF,KAAV,wEACoB,OADpB,SAC0BG,cAAQ,SAAA1I,GAAK,OAAIA,EAAM8E,gBADjD,QACUa,EADV,QAEYzE,IAAR,UAAiByE,EAAQzE,IAAIY,KAA7B,YAAqC6D,EAAQzE,IAAIU,MAAjD,YAA0D+D,EAAQzE,IAAI2B,KACtEmE,QAAQC,IAAI,eAAgBtB,GAHhC,wCAMO,SAAU6C,KAAV,kEACH,OADG,SACGG,aPFuB,oBOEMJ,IADhC,wCAIQ,SAAUE,KAAV,kEACX,OADW,SACLG,aAAI,CACNC,aAAKL,MAFE,wC,qBCVA,gFACX,OADW,SACLI,aAAI,CACNC,aAAKC,MAFE,wC,aCDFC,GAAsB,CAC/BC,QAAS,KACT1J,IAAK,OACL2J,Q,QAASA,EACTC,UAAW,CACP,IAEJC,UAAW,CACP,KCFFC,GAAmBC,IACnBC,GAAmBC,YAAeR,GJLnBS,YAAgB,CACjC3E,iBACAC,mBIIE2E,GAAiBC,eACjBC,GAAc,CAACF,GAAeG,MCNpC,IAAMC,GDQS,SAAyB7B,GACpC,IAAM6B,EAAQC,YAAYR,GAAkBtB,EAAWoB,GAAiBW,IAAe,WAAf,EAAmBJ,MAQ3F,OAPAF,GAAeO,IAAIvB,IAOZoB,ECjBGI,GAUCC,OARf,WACI,OACI,kBAAC,IAAD,CAAUL,MAAOA,IACb,kBAAC,EAAD,QCEQM,QACW,cAA7BlP,OAAOmP,SAASC,UAEe,UAA7BpP,OAAOmP,SAASC,UAEhBpP,OAAOmP,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAACC,GAAD,MAASC,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAjC,GACJA,EAAakC,gBAEdC,OAAM,SAAA1D,GACLP,QAAQO,MAAMA,EAAMa,c","file":"static/js/main.dbc51eca.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nexport default function useWindowDimensions() {\n    const [windowDimensions, setWindowDimensions] = useState(\n        getWindowDimensions()\n    );\n\n    useEffect(() => {\n    function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n\n    return windowDimensions;\n}","const primary = '#000000';\nconst secondary = '#9c27b0';\nconst success = '#388e3c';\nconst error = '#388e3c';\nconst grey = '#2d2d2d';\nconst greyLighteen = '#958d8d';\nconst greySoft = '#fafafa';\nconst white = '#FFF'\n\n\nexport default {\n    primary,\n    secondary,\n    success,\n    error,\n    grey,\n    greyLighteen,\n    greySoft,\n    white\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction InputText(props) {\n\n    const [value, setValue] = React.useState('');\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValue(event.target.value);\n        props.onChange(event.target.value);\n    }\n    const Style = {\n        container: {\n            overflow: 'hidden',\n            display: 'flex',\n            position: 'relative',\n        },\n        input: {\n            flexGrow: 1,\n            width: '100%',\n            padding: 10,\n            border: `1px solid black`,\n            marginBottom: 15,\n            fontSize: 15\n        },\n        '&::focus': {\n            outline: 'none',\n            border: `1px solid black`,\n            boxShadow: '0px 0px 0px 0.1'\n        }\n    }\n\n    return(\n        <div style={Style.container}>\n            <input \n                type=\"text\" \n                style={Style.input} \n                onChange={handleChange} \n                value={value}\n                placeholder={props.label}\n                />\n        </div>\n    )\n}\nInputText.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    label: PropTypes.string.isRequired\n}\n\nexport default InputText","import React from 'react'\nimport Button from '@material-ui/core/Button'\n\nfunction MyButton(props) {\n    return(\n        <Button color=\"secondary\" variant=\"contained\" fullWidth={true} onClick={() => props.onClick()}>\n            {props.label}\n        </Button>\n    )\n}\n\nexport default MyButton","import React from 'react'\nimport PropTypes from 'prop-types'\n\n/**\n * ItemSelectOptions is a child component\n * @param {Object} props \n * This child component will render data from props\n * related with itemSelect props it self\n */\nfunction ItemSelectOptions(props) {\n\n    const styleItem = {\n        content: {\n            width: '100%',\n        },\n        labelItems: {\n            cursor: 'pointer',\n            width: '100%',\n            textAlign: 'left',\n            float: 'left',\n            padding: '12px 0px',\n            borderBottom: '1px solid rgb(239, 239, 239, 1)',\n            display: 'inline-block'\n        },\n        labelContent: {\n            marginLeft: 15,\n            fontSize: 14\n        }\n    }\n\n    const styleActive = (open) => ({\n        width: '100%',\n        background: 'white',\n        border: '1px solid rgb(239, 239, 239, 1)',\n        WebkitBoxShadow: '0px 3px 5px 0px rgba(163,163,163,0.5)',\n        MozBoxShadow: '0px 3px 5px 0px rgba(163,163,163,0.5)',\n        boxShadow: '0px 3px 5px 0px rgba(163,163,163,0.5)',\n        position: 'absolute',\n        zIndex: 3,\n        top: 50,\n        left: 0,\n        right: 0,\n        display: open ? 'block' : 'none',\n        maxHeight: 200,\n        overflow: 'scroll'\n    })\n    \n    const {show, itemSelect} = props\n    if(itemSelect.length < 1) {\n        return null;\n    }\n\n    return(\n        <div style={styleActive(show)}>\n            {\n                itemSelect.map((item, index) => {\n                return(\n                    <div \n                        key={index.toString()} \n                        style={styleItem.content} \n                        className={'clearfix'}>\n                        <div \n                            style={styleItem.labelItems} \n                            onClick={() => props.onSelect(item)}>\n                            <span style={styleItem.labelContent}>{item.label}</span>\n                        </div>\n                    </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nItemSelectOptions.propTypes = {\n    show: PropTypes.bool.isRequired,\n    itemSelect: PropTypes.array.isRequired,\n    onSelect: PropTypes.func.isRequired\n}\n\nexport default ItemSelectOptions ","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ItemSelectOptions from './ItemSelectOptions'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport Color from '../constant/Colors'\n\nconst styles = {\n    container: {\n        position: 'relative'\n    },\n    filterButtonStyle: {\n        border: `1px solid ${Color.primary}`\n    },\n    labelFilterStyleButton: {\n        fontSize: 14,\n        float: 'left',\n        padding: 10\n    },\n    labelFilterStyleIcon: {\n        float: 'right'\n    }\n}\n\nclass SelectOptions extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            open: false\n        }\n    }\n\n    handleFilterStyle() {\n        this.setState({open: !this.state.open})\n    }\n\n    handleClick() {\n        this.setState({open: !this.state.open})\n    }\n\n    /**\n     * You can overwrite this function to\n     * render the button filter\n     */\n    renderButtonFilter(){\n        const {labelButton} = this.props;\n        return(\n            <div style={styles.filterButtonStyle} className={'clearfix'} onClick={this.handleClick.bind(this)}>\n                <span style={styles.labelFilterStyleButton}>{labelButton}</span>\n                <span style={styles.labelFilterStyleIcon}>\n                    <ArrowDropDownIcon color=\"primary\" fontSize={'large'}/>\n                </span>\n            </div>\n        )\n    }\n\n    /**\n     * You can overwrite this function\n     * to render the list of filter\n     */\n    renderItemSelectOption(){\n        const {data} = this.props;\n        return(\n            <ItemSelectOptions\n                show={this.state.open} \n                itemSelect={data}\n                onSelect={(value) => this.props.onSelect(value)}\n            />\n        )\n    }\n\n    render(){\n        return(\n            <div style={styles.container} onClick={() => this.handleFilterStyle()}>\n                {this.renderButtonFilter()}\n                {this.renderItemSelectOption()}\n            </div>\n        )\n    }\n}\n\n\nSelectOptions.propTypes = {\n    labelButton: PropTypes.string.isRequired,\n    data: PropTypes.array.isRequired\n}\n\nexport default SelectOptions","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport SelectOptions from '../coreComponent/SelectOptions'\nimport WindowDimmension from '../hook/WindowDimmension'\nimport moment from 'moment'\n\nconst styles = theme => ({\n    dob: {\n        paddingRight: 0,\n        marginBottom: 15\n    }\n})\n\n/**\n * Date of birth button functionality\n * @param {Object} props\n * Logicaly DobButton is when the month button clicked\n * range date will be generate based on year and month\n * Year button have logicaly same like month button\n */\nfunction DobButton(props) {\n    const { classes } = props\n    const { width } = WindowDimmension()\n\n    const xsDob = () => {\n        if(width < 786) return 12\n        return 6\n    }\n\n    const smDob = () => {\n        if(width < 786) return 12\n        return 4\n    }\n\n    const currentMonth = new Date().getMonth() + 1;\n    const [day, setDay] = useState({value: '01', label: '1'});\n    const [month, setMonth] = useState({value: currentMonth, label: 'JAN'});\n    const [year, setYear] = useState({value: '2020', label: '2020'});\n    const [rangeDay, setRangeDay] = useState([1]);\n    const [labelDay, setLabelDay] = useState('Date');\n    const [labelMonth, setLabelMonth] = useState('Month');\n    const [labelYear, setLabelYear] = useState('Year');\n\n    function handleClickMonth(obj) {\n        setMonth(obj)\n        props.onChangeMonth(obj.value)\n        const x = getDay(year.value, obj.value)\n        setRangeDay(x)\n        setLabelMonth(obj.label);\n    }\n\n    function handleClickYear(obj) {\n        setYear(obj)\n        props.onChangeYear(obj.value)\n        const x = getDay(obj.value, month.value)\n        setRangeDay(x)\n        setLabelYear(obj.label)\n    }\n\n    function handleClickDay(obj) {\n        setDay(obj)\n        props.onChangeDay(obj.value)\n        setLabelDay(obj.label)\n    }\n\n    const getDay = (y, m) => {\n        const date = new Date(y, m, 0).getDate();\n        let day = []\n        for (let i = 1; i <=date; i++) {\n            const a = i < 10 ? i : i;\n            day.push({value: a, label: i})\n        }\n        return day;\n    }\n    \n    const getMonth = () => {\n        const m = moment.monthsShort();\n        let month = [];\n        for (let i = 1; i <=m.length; i++) {\n            const a = i < 10 ? i : i;\n            month.push({value: a, label: m[i - 1]})\n        }\n        return month;\n    }\n    \n    const getYear = () => {\n        const date = new Date()\n        let year = []\n        let minYear = date.getFullYear()\n        for (let i = 0; i <= minYear; i++) {\n            if(i > 1945) {\n                year.unshift({value: i, label: i})\n            }\n        }\n        return year;\n    }\n\n    return(\n        <Grid container item xs={12}>\n            <Grid item xs={xsDob()} sm={smDob()} style={{ paddingRight: width > 786 ? 10 : 0}} className={classes.dob}>\n                <SelectOptions\n                    labelButton={labelMonth}\n                    data={getMonth()}\n                    onSelect={(value) => handleClickMonth(value)} />\n            </Grid>\n            <Grid item xs={xsDob()} sm={smDob()} style={{ paddingRight: width > 786 ? 10 : 0}} className={classes.dob}>\n                <SelectOptions\n                    labelButton={labelDay}\n                    data={rangeDay}\n                    onSelect={(value) => handleClickDay(value)} />\n            </Grid>\n            <Grid item xs={xsDob()} sm={smDob()} className={classes.dob}>\n                <SelectOptions\n                    labelButton={labelYear}\n                    data={getYear()}\n                    onSelect={(value) => handleClickYear(value)} />\n            </Grid>\n        </Grid>\n    )\n}\n\nSelectOptions.propTypes = {\n    data: PropTypes.array.isRequired,\n    onSelect: PropTypes.func.isRequired\n}\nexport default withStyles(styles)(DobButton)","import React, { setState, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { FormControlLabel, Radio } from '@material-ui/core'\n\nfunction RadioButton(props) {\n\n    const [state, setState] = useState(false)\n    \n    const handleChange = event => {\n        setState(event)\n        props.onChange(event)\n    }\n\n    return(\n        <FormControlLabel\n            control={\n                <Radio checked={props.checked}/>\n            }\n            label={props.label}\n            onChange={handleChange}\n        />\n    )\n}\n\nRadioButton.propTypes = {\n    checked: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired\n}\n\nexport default RadioButton","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Grid from '@material-ui/core/Grid'\nimport RadioButton from '../coreComponent/RadioButton'\n\nfunction GenderOptions(props) {\n    return(\n        <Grid container item xs={12}>\n            <Grid item xs={6} sm={6} align={\"left\"}>\n                <RadioButton \n                    label={'male'} \n                    checked={props.checked === 1 ? true : false} \n                    onChange={(event) => props.onChange(1)}/>\n            </Grid>\n            <Grid item xs={6} sm={6} align={\"left\"}>\n                <RadioButton \n                    label={'female'} \n                    checked={props.checked === 0 ? true : false} \n                    onChange={(event) => props.onChange(0)}/>\n            </Grid>\n        </Grid>\n    )\n}\n\nGenderOptions.propTypes = {\n    checked: PropTypes.number.isRequired,\n    onChange: PropTypes.func.isRequired\n}\n\nexport default GenderOptions","import React from 'react'\nimport Colors from '../constant/Colors'\nimport Button from '../coreComponent/Button'\nconst Style = {\n    footer: {\n        width: 500,\n        height: 150,\n        backgroundColor: Colors.secondary\n    }\n}\n\nfunction Footer(props) {\n    return(\n        <div>\n            <div style={{ marginTop: 30, width: '100%', padding: 30, background: Colors.secondary, contentAlign: 'center'}}>\n                <h1 style={{ color: Colors.white, textAlign: 'center' }}>Footer</h1>\n            </div>\n            <div style={{ marginTop: 30, width: '100%', padding: 30, background: Colors.greySoft, contentAlign: 'center'}}>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default Footer","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Grid, Paper, Container, Typography } from '@material-ui/core'\nimport WindowDimmension from '../hook/WindowDimmension'\nimport Colors from '../constant/Colors'\nimport InputText from '../coreComponent/InputText'\nimport Button from '../coreComponent/Button'\nimport DobButton from '../baseComponent/DobButton'\nimport GenderOptions from '../baseComponent/GenderOptions'\nimport Footer from './Footer'\nimport { sagaRegistration, setStateRegistration, setDobStateRegistration } from '../actions/Registration'\nimport { connect } from 'react-redux'\nconst styles = theme => ({\n    root: {\n        flexGrow: 1\n    },\n    grid: {\n        margin: `0px auto`\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        background: Colors.greySoft\n    },\n    title: {\n        textAlign: 'left',\n        marginBottom: 15\n    }\n})\n\n/**\n * RegistrationForm connected with reducers Registration\n * @param {Object} props \n */\nfunction RegistrationForm(props) {\n    const { classes } = props\n    const { sagaRegistration, setStateRegistration, setDobStateRegistration } = props\n    const { \n        mobileNumber, \n        firstName, \n        lastName, \n        dob, \n        gender, \n        email, \n        showLoginButton\n    } = props\n    const { errorCode, errorMessage } = props\n    const { width } = WindowDimmension()\n    const smSize = (width) => {\n        if(width < 1208 && width > 786) return 6\n        if(width < 786) return 12\n        return 6\n    }\n\n    return(\n        <React.Fragment>\n            <Container sm={12}>\n                <Grid item xs={12} sm={smSize(width)} className={classes.grid}>\n                    <Paper elevation={0} className={classes.paper}>\n                        <Typography variant=\"h5\" component=\"h1\" className={classes.title} color=\"primary\">Registration</Typography>\n                        <InputText label='Mobile number' onChange={(val) => console.log(val)} width={width} />\n                        <InputText label='First name' onChange={(val) => console.log(val)} width={width} />\n                        <InputText label='Last name' onChange={(val) => console.log(val)} width={width} />\n                        <DobButton \n                            onChangeMonth={(value) => console.log('onChangeMonth', value)}\n                            onChangeDay={(value) => console.log('onChangeDay', value)}\n                            onChangeYear={(value) => console.log('onChangeYear', value)} />\n                        <GenderOptions\n                            checked={gender}\n                            onChange={(value) => setStateRegistration('gender', value)} />\n                        <InputText label='Email' onChange={(val) => console.log(val)} width={width} />\n                        <Button label={'Register'} onClick={() => sagaRegistration()}/>\n                    </Paper>\n                </Grid>\n                <Footer />\n            </Container>\n        </React.Fragment>\n    )\n}\n\nconst mtp = ({ErrorHandling, Registration}) => {\n    const { errorCode, errorMessage } = ErrorHandling\n    const { mobileNumber, firstName, lastName, dob, gender, email, showLoginButton } = Registration\n    return { errorCode, errorMessage, mobileNumber, firstName, lastName, dob, gender, email, showLoginButton }\n}\nexport default connect(mtp, {sagaRegistration, setStateRegistration, setDobStateRegistration})(withStyles(styles)(RegistrationForm))","import {\n    SET_STATE_REGISTRATION,\n    SET_DOB_STATE_REGISTRATION,\n    SAGA_REGISTRATION,\n    SHOW_LOGIN_BUTTON_REGISTRATION\n} from '../constant/Registration'\n\n/**\n * Use to manage value of state global Registration\n * related on reducers Registration\n * e.g keyState = mobileNumber and valState = 0812XXXX\n * @param {String} keyState \n * @param {String} valState \n */\nexport const setStateRegistration = (keyState: String, valState: String) => {\n    return {\n        type: SET_STATE_REGISTRATION,\n        payload: { keyState, valState }\n    }\n}\n\n/**\n * Use to manage value of state dob Registration\n * related on reducers Registration\n * e.g keyDob = month and valDob = 1\n * @param {String} keyDob \n * @param {Number} valDob \n */\nexport const setDobStateRegistration = (keyDob: String, valDob: Number) => {\n    return {\n        type: SET_DOB_STATE_REGISTRATION,\n        payload: { keyDob, valDob }\n    }\n}\n\n/**\n * Task runner on saga, when user click the register button\n */\nexport const sagaRegistration = () => {\n    return {\n        type: SAGA_REGISTRATION\n    }\n}\n\n/**\n * Use this action to show login button component\n * when fetching with api registration\n * This action should be handle in saga related on\n * sagaRegistration\n */\nexport const showLoginButtonRegistration = () => {\n    return {\n        type: SHOW_LOGIN_BUTTON_REGISTRATION\n    }\n}","/**\n * Registration definition:\n * To set value of state registration as SET_STATE_REG\n * For task runner on saga as saga_registration\n * when user clicked the registration button\n */\nexport const SET_STATE_REGISTRATION = 'set_state_registration'\nexport const SET_DOB_STATE_REGISTRATION = 'set_dob_state_registration'\nexport const SAGA_REGISTRATION = 'saga_registration'\nexport const SHOW_LOGIN_BUTTON_REGISTRATION = 'show_login_button_registration'","import Colors from '../constant/Colors'\n\nexport default {\n    palette: {\n        primary: {\n            light: Colors.primary,\n            main: Colors.primary,\n            dark: Colors.primary,\n            contrastText: '#fff'\n        },\n        secondary: {\n            light: Colors.secondary,\n            main: Colors.secondary,\n            dark: Colors.secondary,\n            contrastText: '#fff'\n        },\n        error: {\n            light: Colors.error,\n            main: Colors.error,\n            dark: Colors.error,\n            contrastText: '#fff'\n        },\n        success: {\n            light: Colors.success,\n            main: Colors.success,\n            dark: Colors.success,\n            contrastText: '#fff'\n        },\n    },\n    status: {\n        danger: 'orange',\n    },\n    \n    typography: {\n        button: {\n            fontWeight: 400,\n            textAlign: 'capitalize'\n        },\n    }\n};\n","import React from 'react'\nimport RegistrationForm from '../component/RegistrationForm'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core'\nimport PrimaryTheme from '../theme/PrimaryTheme'\nimport { connect } from 'react-redux'\n\nfunction Registration() {\n    let theme = createMuiTheme(PrimaryTheme)\n    return(\n        <MuiThemeProvider theme={theme}>\n            <RegistrationForm />\n        </MuiThemeProvider>\n    )\n}\n\nconst mtp = ({}) => {\n    return {}\n}\n\nexport default connect(mtp, {})(Registration)","import {\n    SHOW_ERROR_MESSAGE,\n    HIDE_ERROR_MESSAGE,\n    SET_ERROR_MESSAGE\n} from '../constant/ErrorHandling'\n\nconst initState = {\n    errorCode: '',\n    errorMessage: '',\n    showErrorComponent: false\n}\n\nexport default function ErrorHandling(state = initState, action) {\n    switch (action.type) {\n        case SET_ERROR_MESSAGE:\n\n            const {code, message} = action.payload\n\n            return{\n                ...state,\n                errorCode: code,\n                errorMessage: message\n            }\n        \n        case SHOW_ERROR_MESSAGE:\n            return {\n                ...state,\n                showErrorComponent: true\n            }\n\n        case HIDE_ERROR_MESSAGE:\n            return {\n                ...state,\n                showErrorComponent: false\n            }\n        default:\n            return state\n    }\n}","/**\n * Error handling definition\n * to manage state reducer errorHandling related with:\n * show error component, hide error component,\n * set messaging error from api Auth request\n */\n\nexport const SHOW_ERROR_MESSAGE = 'show_error_message'\nexport const HIDE_ERROR_MESSAGE = 'hide_error_message'\nexport const SET_ERROR_MESSAGE = 'set_error_message'","import {\n    SET_STATE_REGISTRATION,\n    SET_DOB_STATE_REGISTRATION,\n    SHOW_LOGIN_BUTTON_REGISTRATION\n} from '../constant/Registration'\n\nconst initState = {\n    mobileNumber : '',\n    firstName: '',\n    lastName: '',\n    dob: {\n        day: '',\n        month: '',\n        year: '',\n    },\n    gender: 2, //0: Female, 1: Male\n    email: '',\n    showLoginButton: false\n}\n\n/**\n * Reducers Registration to do manage the state\n * of registration page\n * @param {Object} state \n * @param {Function} action \n */\nexport default function Registration(state = initState, action) {\n    switch (action.type) {\n        case SET_STATE_REGISTRATION:\n            const { keyState, valState } = action.payload\n            const newState = {...state}\n            newState[keyState] = valState\n            return {\n                ...state,\n                ...newState\n            }\n        \n        case SET_DOB_STATE_REGISTRATION:\n            const { keyDob, valDob } = action.payload\n            const dobState = {...state}\n            dobState.dob[keyDob] = valDob\n            return {\n                ...state,\n                dob: {...dobState}\n            }\n\n        case SHOW_LOGIN_BUTTON_REGISTRATION:\n            return {\n                ...state,\n                showLoginButton: true\n            }\n        default:\n            return state\n    }\n}","import {combineReducers} from 'redux'\nimport ErrorHandling from './ErrorHandling'\nimport Registration from './Registration'\n\nexport default () => combineReducers({\n    ErrorHandling,\n    Registration\n})","import { all, fork, takeEvery, select } from 'redux-saga/effects'\nimport { SAGA_REGISTRATION } from '../constant/Registration'\n\nfunction* __doRegister() {\n    const payload = yield select( state => state.Registration )\n    payload.dob = `${payload.dob.year}-${payload.dob.month}-${payload.dob.day}`\n    console.log('__doRegister', payload)\n}\n\nexport function* doRegister() {\n    yield takeEvery(SAGA_REGISTRATION, __doRegister)\n}\n\nexport default function* rootSaga() {\n    yield all([\n        fork(doRegister)\n    ])\n}","import {all, fork} from 'redux-saga/effects'\nimport registration from './Registration'\n\nexport default function*(){\n    yield all([\n        fork(registration)\n    ]);\n}\n","import storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nexport const RootPersistedConfig = {\n    timeout: null,\n    key: 'root',\n    storage: storage,\n    whitelist: [\n        ''\n    ],\n    blacklist: [\n        ''\n    ]\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { persistReducer } from 'redux-persist'\nimport reducer from '../reducers';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../saga';\nimport { RootPersistedConfig } from '../persist'\n\nconst composeEnhancers = compose\nconst persistedReducer = persistReducer(RootPersistedConfig, reducer())\nconst sagaMiddleware = createSagaMiddleware()\nconst middlewares = [sagaMiddleware,logger]\n\nexport default function configureStore (initState){\n    const store = createStore(persistedReducer, initState, composeEnhancers(applyMiddleware(...middlewares)))\n    sagaMiddleware.run(rootSaga);\n    if(module.hot){\n        module.hot.accept('../reducers/index',()=>{\n            const nextReducer = require('../reducers/index')\n            store.replaceReducer(nextReducer)\n        })\n    }\n    return store;\n}\n","import React from 'react'\nimport {Provider} from 'react-redux'\nimport './css/Main.css'\nimport Registration from './template/Registration'\nimport configureStore from './store'\nconst store = configureStore()\n\nfunction FabelioApp() {\n    return(\n        <Provider store={store}>\n            <Registration />\n        </Provider>\n    )\n}\n\nexport default FabelioApp","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}