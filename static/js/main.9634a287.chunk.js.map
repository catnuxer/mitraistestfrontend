{"version":3,"sources":["reducers/ErrorHandling.js","constant/ErrorHandling.js","constant/Registration.js","reducers/Registration.js","reducers/index.js","actions/Registration.js","actions/ErrorHandling.js","api/HttpFetch.js","api/AuthApi.js","saga/Registration.js","saga/index.js","persist/index.js","store/index.js","hook/WindowDimmension.js","constant/Colors.js","coreComponent/InputText.js","coreComponent/Button.js","coreComponent/ItemSelectOptions.js","coreComponent/SelectOptions.js","baseComponent/DobButton.js","coreComponent/RadioButton.js","baseComponent/GenderOptions.js","validation/MessagingError.js","baseComponent/ErrorComponent.js","component/RegistrationForm.js","validation/RegisterValidation.js","theme/PrimaryTheme.js","component/Footer.js","template/Registration.js","template/Login.js","App.js","serviceWorker.js","index.js"],"names":["initState","errorCode","errorMessage","showErrorComponent","ErrorHandling","state","action","type","payload","code","message","mobileNumber","firstName","lastName","dob","day","month","year","gender","email","showLoginButton","isRegistered","isFetchingApi","Registration","keyState","valState","newState","keyDob","valDob","dobState","statusFetch","setIsFetchingApi","hideErrorMessage","setErrorMessage","appPost","url","data","a","header","fetch","body","JSON","stringify","method","headers","resp","json","appGet","HttpFetch","register","__doRegister","doRegister","rootSaga","apiRegister","AuthApi","then","catch","err","put","select","call","response","error","takeEvery","all","fork","registration","history","RootPersistedConfig","timeout","key","storage","whitelist","blacklist","createBrowserHistory","composeEnhancers","compose","persistedReducer","persistReducer","combineReducers","router","connectRouter","sagaMiddleware","createSagaMiddleware","routeMiddleware","routerMiddleware","middlewares","logger","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","InputText","props","Style","container","overflow","display","position","input","flexGrow","padding","border","marginBottom","fontSize","outline","boxShadow","style","onChange","event","target","value","placeholder","label","onFocus","onBlur","MyButton","Button","color","variant","fullWidth","onClick","loading","ItemSelectOptions","open","styleItem","content","labelItems","cursor","textAlign","float","borderBottom","labelContent","marginLeft","show","itemSelect","length","background","WebkitBoxShadow","MozBoxShadow","zIndex","top","left","right","maxHeight","map","item","index","toString","className","onSelect","styles","filterButtonStyle","Color","labelFilterStyleButton","labelFilterStyleIcon","SelectOptions","this","setState","labelButton","handleClick","bind","handleFilterStyle","renderButtonFilter","renderItemSelectOption","Component","propTypes","PropTypes","array","isRequired","func","withStyles","theme","paddingRight","classes","WindowDimmension","xsDob","smDob","currentMonth","Date","getMonth","setDay","setMonth","setYear","rangeDay","setRangeDay","labelDay","setLabelDay","labelMonth","setLabelMonth","labelYear","setLabelYear","getDay","y","m","date","getDate","i","push","Grid","xs","sm","moment","monthsShort","obj","onChangeMonth","x","handleClickMonth","onChangeDay","minYear","getFullYear","unshift","getYear","onChangeYear","handleClickYear","RadioButton","FormControlLabel","control","Radio","checked","GenderOptions","align","isExist","isNotValid","box","Colors","text","arrow","margin","borderLeft","borderRight","borderTop","bottom","ErrorComponent","TransitionGroup","CSSTransition","classNames","hide","connect","sagaRegistration","setStateRegistration","setDobStateRegistration","root","grid","gridBlock","footerArea","paper","spacing","palette","secondary","title","Fragment","Container","smSize","Paper","elevation","Typography","component","MessagingError","val","totalArr","substr","number","remapMobileNumber","test","String","toLowerCase","validateEmail","errMsg","primary","light","main","dark","contrastText","success","status","danger","typography","button","fontWeight","footer","marginTop","contentAlign","footerTitle","ButtonLogin","location","process","ContentFooter","hideLoginButtonRegistration","console","log","createMuiTheme","PrimaryTheme","login","titleLogin","link","textDecoration","borderRadius","Login","onMouseOver","e","onMouseOut","goBack","store","createStore","applyMiddleware","run","configureStore","App","context","exact","path","render","to","staticContext","MitraisApp","ReactReduxContext","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.9634a287.chunk.js","sourcesContent":["import {\n    SHOW_ERROR_MESSAGE,\n    HIDE_ERROR_MESSAGE,\n    SET_ERROR_MESSAGE\n} from '../constant/ErrorHandling'\n\nconst initState = {\n    errorCode: '',\n    errorMessage: '',\n    showErrorComponent: false\n}\n\n/**\n * State reducer to manage the error\n * from response api. This one is used by component also\n * such as ErrorComponent, etc.\n * @param {Object} state \n * @param {Function} action \n */\nexport default function ErrorHandling(state = initState, action) {\n    switch (action.type) {\n        case SET_ERROR_MESSAGE:\n\n            const {code, message} = action.payload\n\n            return{\n                ...state,\n                errorCode: code,\n                errorMessage: message,\n                showErrorComponent: true\n            }\n        \n        case SHOW_ERROR_MESSAGE:\n            return {\n                ...state,\n                showErrorComponent: true\n            }\n\n        case HIDE_ERROR_MESSAGE:\n            return {\n                ...state,\n                ...initState\n            }\n        \n        default:\n            return state\n    }\n}","/**\n * Error handling definition\n * to manage state reducer errorHandling related with:\n * show error component, hide error component,\n * set messaging error from api Auth request\n */\n\nexport const SHOW_ERROR_MESSAGE = 'show_error_message'\nexport const HIDE_ERROR_MESSAGE = 'hide_error_message'\nexport const SET_ERROR_MESSAGE = 'set_error_message'","/**\n * Registration definition:\n * To set value of state registration as SET_STATE_REGISTRATION\n * \n * Task runner on handle by SAGA_REGISTRATION related on condition\n * when the users click the register button\n * \n * To Toogle the login button, use it SHOW_LOGIN_BUTTON_REGISTRATION\n * and HIDE_LOGIN_BUTTON_REGISTRATION\n * \n * And for set the sucess of registration call SUCCESS_REGISTRATION in saga\n * based on condition no error from response.\n * \n * To do manage the loading screen or button, etc.\n * You can use SET_IS_FETCHING_API with input true or false\n */\nexport const SET_STATE_REGISTRATION = 'set_state_registration'\nexport const SET_DOB_STATE_REGISTRATION = 'set_dob_state_registration'\nexport const SAGA_REGISTRATION = 'saga_registration'\nexport const SHOW_LOGIN_BUTTON_REGISTRATION = 'show_login_button_registration'\nexport const HIDE_LOGIN_BUTTON_REGISTRATION = 'hide_login_button_registration'\nexport const SUCCESS_REGISTRATION = 'success_registration'\nexport const SET_IS_FETCHING_API = 'set_is_fetching_api'","import {\n    SET_STATE_REGISTRATION,\n    SET_DOB_STATE_REGISTRATION,\n    SHOW_LOGIN_BUTTON_REGISTRATION,\n    HIDE_LOGIN_BUTTON_REGISTRATION,\n    SUCCESS_REGISTRATION,\n    SET_IS_FETCHING_API\n} from '../constant/Registration'\n\nconst initState = {\n    mobileNumber : '',\n    firstName: '',\n    lastName: '',\n    dob: {\n        day: '',\n        month: '',\n        year: '',\n    },\n    gender: 2, //0: Female, 1: Male\n    email: '',\n    showLoginButton: false,\n    isRegistered: false,\n    isFetchingApi: false\n}\n\n/**\n * Reducers Registration to do manage the state\n * of registration page\n * @param {Object} state \n * @param {Function} action \n */\nexport default function Registration(state = initState, action) {\n    switch (action.type) {\n        case SET_STATE_REGISTRATION:\n            const { keyState, valState } = action.payload\n            const newState = {...state}\n            newState[keyState] = valState\n            return {\n                ...state,\n                ...newState\n            }\n        \n        case SET_DOB_STATE_REGISTRATION:\n            const { keyDob, valDob } = action.payload\n            const dobState = {...state.dob}\n            dobState[keyDob] = valDob\n            return {\n                ...state,\n                dob: {...dobState}\n            }\n\n        case SHOW_LOGIN_BUTTON_REGISTRATION:\n            return {\n                ...state,\n                showLoginButton: true\n            }\n        \n        case HIDE_LOGIN_BUTTON_REGISTRATION:\n            return {\n                ...state,\n                showLoginButton: false\n            }\n            \n        case SUCCESS_REGISTRATION:\n            return {\n                ...initState,\n                isRegistered: true\n            }\n        case SET_IS_FETCHING_API:\n            const {statusFetch} = action.payload\n            return {\n                ...state,\n                isFetchingApi: statusFetch\n            }\n        default:\n            return state\n    }\n}","import {combineReducers} from 'redux'\nimport {connectRouter} from 'connected-react-router'\nimport ErrorHandling from './ErrorHandling'\nimport Registration from './Registration'\n\nexport default (history) => combineReducers({\n    router: connectRouter(history),\n    ErrorHandling,\n    Registration\n})","import {\n    SET_STATE_REGISTRATION,\n    SET_DOB_STATE_REGISTRATION,\n    SAGA_REGISTRATION,\n    SHOW_LOGIN_BUTTON_REGISTRATION,\n    HIDE_LOGIN_BUTTON_REGISTRATION,\n    SUCCESS_REGISTRATION,\n    SET_IS_FETCHING_API\n} from '../constant/Registration'\n\n/**\n * Use to manage value of state global Registration\n * related on reducers Registration\n * e.g keyState = mobileNumber and valState = 0812XXXX\n * @param {String} keyState \n * @param {String} valState \n */\nexport const setStateRegistration = (keyState: String, valState: String) => {\n    return {\n        type: SET_STATE_REGISTRATION,\n        payload: { keyState, valState }\n    }\n}\n\n/**\n * Use to manage value of state dob Registration\n * related on reducers Registration\n * e.g keyDob = month and valDob = 1\n * @param {String} keyDob \n * @param {Number} valDob \n */\nexport const setDobStateRegistration = (keyDob: String, valDob: Number) => {\n    return {\n        type: SET_DOB_STATE_REGISTRATION,\n        payload: { keyDob, valDob }\n    }\n}\n\n/**\n * Task runner on saga, when user click the register button\n */\nexport const sagaRegistration = () => {\n    return {\n        type: SAGA_REGISTRATION\n    }\n}\n\n/**\n * Use this action to show login button component\n * when fetching with api registration\n * This action should be handle in saga related on\n * sagaRegistration\n */\nexport const showLoginButtonRegistration = () => {\n    return {\n        type: SHOW_LOGIN_BUTTON_REGISTRATION\n    }\n}\n\n/**\n * Use this action to hide the login button component\n * after the process of success registration \n */\nexport const hideLoginButtonRegistration = () => {\n    return {\n        type: HIDE_LOGIN_BUTTON_REGISTRATION\n    }\n}\n\n/**\n * Call success conditions and reset the state of\n * Registration as initial state.\n * This should be call when registration success.\n * So this action will call in saga related to\n * SagaRegistration.\n */\nexport const setSuccessRegistration = () => {\n    return {\n        type: SUCCESS_REGISTRATION\n    }\n}\n\n/**\n * Manage the UI of screen or button\n * It can use on handle the loading of\n * component.\n * @param {Boolean} statusFetch \n */\nexport const setIsFetchingApi = (statusFetch) => {\n    return {\n        type: SET_IS_FETCHING_API,\n        payload: { statusFetch }\n    }\n}","import {\n    SHOW_ERROR_MESSAGE,\n    HIDE_ERROR_MESSAGE,\n    SET_ERROR_MESSAGE\n} from '../constant/ErrorHandling'\n\n/**\n * Show the error message alert component\n * related on reducer state ErrorHandling\n */\nexport const showErrorMessage = () => {\n    return {\n        type: SHOW_ERROR_MESSAGE\n    }\n}\n\n/**\n * Hide the message alert component \n * related on reducer state ErrorHandling\n */\nexport const hideErrorMessage = () => {\n    return {\n        type: HIDE_ERROR_MESSAGE\n    }\n}\n\n/**\n * Set the errorCode and errorMessage state \n * related on reducer state ErrorHandling\n * @param {String} message\n */\nexport const setErrorMessage = (code: Number, message: String) => {\n    return {\n        type: SET_ERROR_MESSAGE,\n        payload: { code, message }\n    }\n}","/**\n * Http Fetch Request POST Method\n * @param {String} url \n * @param {Any} data \n * @param {Object} header \n */\nconst appPost = async (url, data, header={} )=>{\n    let resp = await fetch(url, {\n        body:JSON.stringify(data),\n        method:'POST',\n        headers:{\n            ...header,\n            \"content-type\":'application/json',\n        }\n    })\n\n    return await resp.json()\n}\n\n/**\n * Http Fetch Request GET Method\n * @param {String} url \n * @param {Object} header \n */\nconst appGet = async (url, header={})=>{\n    let resp = await fetch(url, {\n        method:'GET',\n        headers:{\n            ...header,\n            \"content-type\":'application/json',\n        }\n    })\n\n    return await resp.json()\n}\n\nexport default {appGet, appPost}\n","import HttpFetch from './HttpFetch'\n\n/**\n * The object of payload related on state\n * reducers Registration\n * @param {Object} payload \n */\nasync function register ({payload}) {\n    const url = 'https://mitraist.herokuapp.com/auth/signup'\n    const resp = await HttpFetch.appPost(url, payload)\n    return resp;\n}\n\nexport default {\n    register\n}","import { all, fork, takeEvery, select, put, call } from 'redux-saga/effects'\nimport { SAGA_REGISTRATION } from '../constant/Registration'\nimport { showLoginButtonRegistration, setSuccessRegistration, setIsFetchingApi } from '../actions/Registration'\nimport { setErrorMessage, hideErrorMessage } from '../actions/ErrorHandling'\nimport AuthApi from '../api/AuthApi'\n\nconst apiRegister = payload => AuthApi.register({payload}).then(resp => resp).catch(err => err);\n\n/**\n * Register Button Task Runner\n */\nexport function* __doRegister() {\n    yield put(setIsFetchingApi(true));\n    try {\n        const payload = yield select( state => state.Registration )\n        payload.dob = `${payload.dob.year}-${payload.dob.month}-${payload.dob.day}`\n        const response = yield call(apiRegister, payload);\n        if(response.error !== 0) {\n            yield put(setErrorMessage(response.error, response.message))\n        } else {\n            yield put(setSuccessRegistration())\n            yield put(hideErrorMessage())\n            yield put(showLoginButtonRegistration())\n        }\n    } catch (error) {\n        throw error\n    }\n    yield put(setIsFetchingApi(false))\n}\n\nexport function* doRegister() {\n    yield takeEvery(SAGA_REGISTRATION, __doRegister)\n}\n\nexport default function* rootSaga() {\n    yield all([\n        fork(doRegister)\n    ])\n}","import {all, fork} from 'redux-saga/effects'\nimport registration from './Registration'\n\nexport default function*(){\n    yield all([\n        fork(registration)\n    ]);\n}\n","import storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nexport const RootPersistedConfig = {\n    timeout: null,\n    key: 'root',\n    storage: storage,\n    whitelist: [\n        ''\n    ],\n    blacklist: [\n        ''\n    ]\n}\n","import { createBrowserHistory } from 'history'\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { routerMiddleware } from 'connected-react-router'\nimport { persistReducer } from 'redux-persist'\nimport reducer from '../reducers';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../saga';\nimport { RootPersistedConfig } from '../persist'\nexport const history = createBrowserHistory()\n\nconst composeEnhancers = compose\nconst persistedReducer = persistReducer(RootPersistedConfig, reducer(history))\nconst sagaMiddleware = createSagaMiddleware()\nconst routeMiddleware = routerMiddleware(history)\nconst middlewares = [sagaMiddleware,logger]\n\nexport default function configureStore (initState){\n    const store = createStore(persistedReducer, initState, composeEnhancers(applyMiddleware(...middlewares), applyMiddleware(routeMiddleware)))\n    sagaMiddleware.run(rootSaga);\n    if(module.hot){\n        module.hot.accept('../reducers/index',()=>{\n            const nextReducer = require('../reducers/index')\n            store.replaceReducer(nextReducer)\n        })\n    }\n    return store;\n}\n","import { useEffect, useState } from \"react\";\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\n/**\n * This function will produce as an object { width, height }\n * Use to get value of width heigh related on size breakpoint\n * of component elements\n */\nexport default function useWindowDimensions() {\n    const [windowDimensions, setWindowDimensions] = useState(\n        getWindowDimensions()\n    );\n\n    useEffect(() => {\n    function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n\n    return windowDimensions;\n}","/**\n * Use the colors as definition\n * Primary: Black\n * Secondary: Purple\n * Success: Green\n * etc\n */\nconst primary = '#000000';\nconst secondary = '#9c27b0';\nconst success = '#388e3c';\nconst error = '#f4382d';\nconst grey = '#2d2d2d';\nconst greyLighteen = '#958d8d';\nconst greySoft = '#fafafa';\nconst white = '#FFF'\n\n\nexport default {\n    primary,\n    secondary,\n    success,\n    error,\n    grey,\n    greyLighteen,\n    greySoft,\n    white\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\n/**\n * This InputText Component have 3 main props:\n * onChange is a function\n * label is is a string\n * value is a string\n * @param {Object} props \n */\nfunction InputText(props) {\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        props.onChange(event.target.value);\n    }\n    \n    const Style = {\n        container: {\n            overflow: 'hidden',\n            display: 'flex',\n            position: 'relative',\n        },\n        input: {\n            flexGrow: 1,\n            width: '100%',\n            padding: 10,\n            border: `1px solid black`,\n            marginBottom: 15,\n            fontSize: 15\n        },\n        '&::focus': {\n            outline: 'none',\n            border: `1px solid black`,\n            boxShadow: '0px 0px 0px 0.1'\n        },\n        error: {\n            position: 'relative',\n            width: '100%'\n        }\n    }\n\n    return(\n        <div style={Style.error}>\n            <div style={Style.container}>\n                <input \n                    type=\"text\" \n                    style={Style.input} \n                    onChange={handleChange} \n                    value={props.value}\n                    placeholder={props.label}\n                    onFocus={props.onFocus}\n                    onBlur={props.onBlur}\n                    />\n            </div>\n        </div>\n    )\n}\nInputText.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n}\n\nexport default InputText","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '@material-ui/core/Button'\n\n/**\n * onClick Props will do domething\n * related on props it self\n * @param {Function} props \n */\nfunction MyButton(props) {\n    return(\n        <Button \n            color={props.color}\n            variant=\"contained\"\n            fullWidth={true}\n            onClick={() => props.onClick()}>\n        {\n            props.loading ? 'LOADING' : props.label\n        }\n        </Button>\n    )\n}\n\nMyButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    label: PropTypes.string.isRequired,\n}\n\nexport default MyButton","import React from 'react'\nimport PropTypes from 'prop-types'\n\n/**\n * ItemSelectOptions is a child component\n * @param {Object} props \n * This child component will render data from props\n * related with itemSelect props it self\n */\nfunction ItemSelectOptions(props) {\n\n    const styleItem = {\n        content: {\n            width: '100%',\n        },\n        labelItems: {\n            cursor: 'pointer',\n            width: '100%',\n            textAlign: 'left',\n            float: 'left',\n            padding: '12px 0px',\n            borderBottom: '1px solid rgb(239, 239, 239, 1)',\n            display: 'inline-block'\n        },\n        labelContent: {\n            marginLeft: 15,\n            fontSize: 14\n        }\n    }\n\n    const styleActive = (open) => ({\n        width: '100%',\n        background: 'white',\n        border: '1px solid rgb(239, 239, 239, 1)',\n        WebkitBoxShadow: '0px 3px 5px 0px rgba(163,163,163,0.5)',\n        MozBoxShadow: '0px 3px 5px 0px rgba(163,163,163,0.5)',\n        boxShadow: '0px 3px 5px 0px rgba(163,163,163,0.5)',\n        position: 'absolute',\n        zIndex: 3,\n        top: 50,\n        left: 0,\n        right: 0,\n        display: open ? 'block' : 'none',\n        maxHeight: 200,\n        overflow: 'scroll'\n    })\n    \n    const {show, itemSelect} = props\n    if(itemSelect.length < 1) {\n        return null;\n    }\n\n    return(\n        <div style={styleActive(show)}>\n            {\n                itemSelect.map((item, index) => {\n                return(\n                    <div \n                        key={index.toString()} \n                        style={styleItem.content} \n                        className={'clearfix'}>\n                        <div \n                            style={styleItem.labelItems} \n                            onClick={() => props.onSelect(item)}>\n                            <span style={styleItem.labelContent}>{item.label}</span>\n                        </div>\n                    </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nItemSelectOptions.propTypes = {\n    show: PropTypes.bool.isRequired,\n    itemSelect: PropTypes.array.isRequired,\n    onSelect: PropTypes.func.isRequired\n}\n\nexport default ItemSelectOptions ","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ItemSelectOptions from './ItemSelectOptions'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport Color from '../constant/Colors'\n\nconst styles = {\n    container: {\n        position: 'relative'\n    },\n    filterButtonStyle: {\n        border: `1px solid ${Color.primary}`\n    },\n    labelFilterStyleButton: {\n        fontSize: 14,\n        float: 'left',\n        padding: 10\n    },\n    labelFilterStyleIcon: {\n        float: 'right'\n    }\n}\n\n/**\n * This class component have a child component ItemSelectOptions\n * You can extends this class and overwriding the function\n * renderItemSelectOption to do render the child components\n */\nclass SelectOptions extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            open: false\n        }\n    }\n\n    handleFilterStyle() {\n        this.setState({open: !this.state.open})\n    }\n\n    handleClick() {\n        this.setState({open: !this.state.open})\n    }\n\n    /**\n     * You can overwrite this function to\n     * render the button filter\n     */\n    renderButtonFilter(){\n        const {labelButton} = this.props;\n        return(\n            <div style={styles.filterButtonStyle} className={'clearfix'} onClick={this.handleClick.bind(this)}>\n                <span style={styles.labelFilterStyleButton}>{labelButton}</span>\n                <span style={styles.labelFilterStyleIcon}>\n                    <ArrowDropDownIcon color=\"primary\" fontSize={'large'}/>\n                </span>\n            </div>\n        )\n    }\n\n    /**\n     * You can overwrite this function\n     * to render the list of filter\n     */\n    renderItemSelectOption(){\n        const {data} = this.props;\n        return(\n            <ItemSelectOptions\n                show={this.state.open} \n                itemSelect={data}\n                onSelect={(value) => this.props.onSelect(value)}\n            />\n        )\n    }\n\n    render(){\n        return(\n            <div style={styles.container} onClick={() => this.handleFilterStyle()}>\n                {this.renderButtonFilter()}\n                {this.renderItemSelectOption()}\n            </div>\n        )\n    }\n}\n\n\nSelectOptions.propTypes = {\n    labelButton: PropTypes.string.isRequired,\n    data: PropTypes.array.isRequired\n}\n\nexport default SelectOptions","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport SelectOptions from '../coreComponent/SelectOptions'\nimport WindowDimmension from '../hook/WindowDimmension'\nimport moment from 'moment'\n\nconst styles = theme => ({\n    dob: {\n        paddingRight: 0,\n        marginBottom: 15\n    }\n})\n\n/**\n * Date of birth button functionality\n * @param {Object} props\n * Logicaly DobButton is when the month button clicked\n * range date will be generate based on year and month\n * Year button have logicaly same like month button\n */\nfunction DobButton(props) {\n    const { classes } = props\n    const { width } = WindowDimmension()\n\n    const xsDob = () => {\n        if(width < 786) return 12\n        return 6\n    }\n\n    const smDob = () => {\n        if(width < 786) return 12\n        return 4\n    }\n\n    const currentMonth = new Date().getMonth() + 1;\n    const [day, setDay] = useState({value: '01', label: '1'});\n    const [month, setMonth] = useState({value: currentMonth, label: 'JAN'});\n    const [year, setYear] = useState({value: '2020', label: '2020'});\n    const [rangeDay, setRangeDay] = useState([1]);\n    const [labelDay, setLabelDay] = useState('Date');\n    const [labelMonth, setLabelMonth] = useState('Month');\n    const [labelYear, setLabelYear] = useState('Year');\n\n    function handleClickMonth(obj) {\n        setMonth(obj)\n        props.onChangeMonth(obj.value)\n        const x = getDay(year.value, obj.value)\n        setRangeDay(x)\n        setLabelMonth(obj.label);\n    }\n\n    function handleClickYear(obj) {\n        setYear(obj)\n        props.onChangeYear(obj.value)\n        const x = getDay(obj.value, month.value)\n        setRangeDay(x)\n        setLabelYear(obj.label)\n    }\n\n    function handleClickDay(obj) {\n        setDay(obj)\n        props.onChangeDay(obj.value)\n        setLabelDay(obj.label)\n    }\n\n    const getDay = (y, m) => {\n        const date = new Date(y, m, 0).getDate();\n        let day = []\n        for (let i = 1; i <=date; i++) {\n            const a = i < 10 ? i : i;\n            day.push({value: a, label: i})\n        }\n        return day;\n    }\n    \n    const getMonth = () => {\n        const m = moment.monthsShort();\n        let month = [];\n        for (let i = 1; i <=m.length; i++) {\n            const a = i < 10 ? i : i;\n            month.push({value: a, label: m[i - 1]})\n        }\n        return month;\n    }\n    \n    const getYear = () => {\n        const date = new Date()\n        let year = []\n        let minYear = date.getFullYear()\n        for (let i = 0; i <= minYear; i++) {\n            if(i > 1945) {\n                year.unshift({value: i, label: i})\n            }\n        }\n        return year;\n    }\n\n    return(\n        <Grid container item xs={12}>\n            <>\n            <Grid item xs={xsDob()} sm={smDob()} style={{ paddingRight: width > 786 ? 10 : 0}} className={classes.dob}>\n                <SelectOptions\n                    labelButton={labelMonth}\n                    data={getMonth()}\n                    onSelect={(value) => handleClickMonth(value)} />\n            </Grid>\n            <Grid item xs={xsDob()} sm={smDob()} style={{ paddingRight: width > 786 ? 10 : 0}} className={classes.dob}>\n                <SelectOptions\n                    labelButton={labelDay}\n                    data={rangeDay}\n                    onSelect={(value) => handleClickDay(value)} />\n            </Grid>\n            <Grid item xs={xsDob()} sm={smDob()} className={classes.dob}>\n                <SelectOptions\n                    labelButton={labelYear}\n                    data={getYear()}\n                    onSelect={(value) => handleClickYear(value)} />\n            </Grid>\n            </>\n        </Grid>\n    )\n}\n\nSelectOptions.propTypes = {\n    data: PropTypes.array.isRequired,\n    onSelect: PropTypes.func.isRequired\n}\nexport default withStyles(styles)(DobButton)","import React, { setState, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { FormControlLabel, Radio } from '@material-ui/core'\n\n/**\n * Radio Button should have properties checked and label\n * @param {Object} props \n */\nfunction RadioButton(props) {\n\n    const [state, setState] = useState(false)\n    \n    const handleChange = event => {\n        setState(event)\n        props.onChange(event)\n    }\n\n    return(\n        <FormControlLabel\n            control={\n                <Radio color=\"primary\" checked={props.checked}/>\n            }\n            label={props.label}\n            onChange={handleChange}\n        />\n    )\n}\n\nRadioButton.propTypes = {\n    checked: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired\n}\n\nexport default RadioButton","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Grid from '@material-ui/core/Grid'\nimport RadioButton from '../coreComponent/RadioButton'\n\n/**\n * Gender options define as male = 1 and female = 0\n * @param {Object} props \n */\nfunction GenderOptions(props) {\n    return(\n        <Grid container item xs={12}>\n            <Grid item xs={6} sm={6} align={\"left\"}>\n                <RadioButton \n                    label={'male'} \n                    checked={props.checked === 1 ? true : false} \n                    onChange={(event) => props.onChange(1)}/>\n            </Grid>\n            <Grid item xs={6} sm={6} align={\"left\"}>\n                <RadioButton \n                    label={'female'} \n                    checked={props.checked === 0 ? true : false} \n                    onChange={(event) => props.onChange(0)}/>\n            </Grid>\n        </Grid>\n    )\n}\n\nGenderOptions.propTypes = {\n    checked: PropTypes.number.isRequired,\n    onChange: PropTypes.func.isRequired\n}\n\nexport default GenderOptions","/**\n * Standart messaging error on\n * Registration\n */\nexport default {\n    mobileNumber: {\n        isRequired: {\n            error: 201,\n            message: \"Mobile number is required\"\n        },\n        isExist: {\n            error: 201,\n            message: \"Your mobile number is exist, plase use another\"\n        },\n        isNotValid: {\n            error: 201,\n            message: \"Please enter valid indonesian mobile number\"\n        }\n    },\n    firstName: {\n        isRequired: {\n            error: 202,\n            message: \"First name is required\"\n        }\n    },\n    lastName: {\n        isRequired: {\n            error: 203,\n            message: \"Last name is required\"\n        }\n    },\n    email: {\n        isRequired: {\n            error: 204,\n            message: \"Email is required and should valid email address\"\n        },\n        isExist: {\n            error: 202,\n            message: \"Your email is not available, plase use other\"\n        }\n    }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Colors from '../constant/Colors'\nimport {\n    CSSTransition,\n    TransitionGroup\n} from 'react-transition-group'\n\nconst Style = {\n    box: {\n        padding: '10px 0px',\n        background: Colors.error,\n        border: `1px solid ${Colors.greyLighteen}`,\n        position: 'relative',\n        marginBottom: 15\n    },\n    text: {\n        color: Colors.white,\n        fontSize: 14\n    },\n    arrow: {\n        margin: `0 auto`,\n        width: 0,\n        height: 0,\n        borderLeft: '10px solid transparent',\n        borderRight: '10px solid transparent',\n        borderTop: `10px solid ${Colors.error}`,\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: -10\n    }\n}\n\n/**\n * Error component have object with message\n * e.g { message: 'Please enter valid indonesian phone number' }\n * @param {Object} props \n */\nfunction ErrorComponent(props) {\n    return(\n        <TransitionGroup>\n            <CSSTransition timeout={500} classNames=\"error\">\n                <div className={'errorBox'} style={Style.box} onClick={() => props.hide()}>\n                    <div style={Style.arrow}></div>\n                    <span style={Style.text}>{props.message}</span>\n                </div>\n            </CSSTransition>\n        </TransitionGroup>\n    )\n}\n\nErrorComponent.propTypes = {\n    message: PropTypes.string.isRequired,\n    hide: PropTypes.func.isRequired\n}\n\nexport default ErrorComponent","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Grid, Paper, Container, Typography } from '@material-ui/core'\nimport WindowDimmension from '../hook/WindowDimmension'\nimport Colors from '../constant/Colors'\nimport InputText from '../coreComponent/InputText'\nimport Button from '../coreComponent/Button'\nimport DobButton from '../baseComponent/DobButton'\nimport GenderOptions from '../baseComponent/GenderOptions'\nimport { \n    sagaRegistration,\n    setStateRegistration,\n    setDobStateRegistration\n} from '../actions/Registration'\nimport {\n    setErrorMessage,\n    hideErrorMessage\n} from '../actions/ErrorHandling'\nimport { connect } from 'react-redux'\nimport { remapMobileNumber, validateEmail } from '../validation/RegisterValidation'\nimport MessagingError from '../validation/MessagingError'\nimport ErrorComponent from '../baseComponent/ErrorComponent'\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1\n    },\n    grid: {\n        margin: `0px auto`\n    },\n    gridBlock: {\n        margin: `0px auto`,\n        left: 0,\n        right: 0,\n        width: '100%',\n        height: 464,\n        position: 'absolute',\n        background: '#b9b9b996',\n        zIndex: 3000\n    },\n    footerArea: {\n        width: '100%',\n        position: 'absolute',\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        background: Colors.greySoft\n    },\n    title: {\n        textAlign: 'left',\n        marginBottom: 15\n    }\n})\n\n/**\n * RegistrationForm connected with reducers Registration\n * ErrorComponent will show if some component value is blank\n * or receive the error when fetching with api AuthApi register\n * @param {Object} props \n */\nfunction RegistrationForm(props) {\n    //Props Object\n    const { classes } = props\n\n    const { \n        sagaRegistration, \n        setStateRegistration, \n        setDobStateRegistration\n    } = props\n\n    const { \n        mobileNumber, \n        firstName, \n        lastName, \n        isFetchingApi, \n        gender, \n        email,\n        showLoginButton\n    } = props\n\n    const {\n        errorCode,\n        errorMessage,\n        setErrorMessage,\n        hideErrorMessage\n    } = props\n\n    //State Logic On Validate Form\n    const handleCheckMobileNumber = () => {\n        if (mobileNumber == '')\n        setErrorMessage(\n            MessagingError.mobileNumber.isRequired.error,\n            MessagingError.mobileNumber.isRequired.message\n        )\n    }\n    \n    const handleCheckFirstName = () => {\n        if (firstName == '')\n        setErrorMessage(\n            MessagingError.firstName.isRequired.error,\n            MessagingError.firstName.isRequired.message\n        )\n    }\n\n    const handleCheckLastName = () => {\n        if (lastName == '')\n        setErrorMessage(\n            MessagingError.lastName.isRequired.error,\n            MessagingError.lastName.isRequired.message\n        )\n    }\n\n    const handleCheckEmail = () => {\n        if(email == '')\n        setErrorMessage(\n            MessagingError.email.isRequired.error,\n            MessagingError.email.isRequired.message\n        )\n    }\n    \n    //Style logic reducing the size screen\n    const { width } = WindowDimmension()\n    \n    const smSize = (width) => {\n        if (width < 1208 && width > 786) return 6\n        if (width < 786) return 12\n        return 6\n    }\n\n    function RenderTitle() {\n        return(\n            <Typography  variant=\"h5\" component=\"h1\" className={classes.title} color=\"primary\">\n                Registration\n            </Typography>\n        )\n    }\n\n    function BlockedScreen(props) {\n        if(props.show) {\n            return(\n                <Grid item xs={12} sm={12} className={classes.gridBlock}></Grid>\n            )\n        }\n\n        return <div></div>\n    }\n\n    return(\n        <React.Fragment>\n        <Container sm={12}>\n            <BlockedScreen show={showLoginButton}/>\n            <Grid item xs={12} sm={smSize(width)} className={classes.grid}>\n                <Paper elevation={0} className={classes.paper}>\n                    <RenderTitle></RenderTitle>\n                    {\n                        errorCode==201 && errorMessage !== '' &&\n                        <ErrorComponent hide={hideErrorMessage} message={errorMessage}></ErrorComponent>\n                    }\n                    <InputText\n                        label='Mobile number' \n                        width={width}\n                        onBlur={handleCheckMobileNumber}\n                        value={mobileNumber}\n                        onChange={(val) => setStateRegistration('mobileNumber', remapMobileNumber(val))}/>\n                    {\n                        errorCode==202 && errorMessage !== '' &&\n                        <ErrorComponent hide={hideErrorMessage} message={errorMessage}></ErrorComponent>\n                    }\n                    <InputText \n                        label='First name'\n                        width={width}\n                        onBlur={handleCheckFirstName}\n                        value={firstName}\n                        onChange={(val) => setStateRegistration('firstName', val)} />\n                    {\n                        errorCode==203 && errorMessage !== '' &&\n                        <ErrorComponent hide={hideErrorMessage} message={errorMessage}></ErrorComponent>\n                    }\n                    <InputText\n                        label='Last name'\n                        width={width}\n                        onBlur={handleCheckLastName}\n                        value={lastName}\n                        onChange={(val) => setStateRegistration('lastName', val)} />\n                    <DobButton \n                        onChangeMonth={(value) => setDobStateRegistration('month', value)}\n                        onChangeDay={(value) => setDobStateRegistration('day', value)}\n                        onChangeYear={(value) => setDobStateRegistration('year', value)} />\n                    <GenderOptions\n                        checked={gender}\n                        onChange={(value) => setStateRegistration('gender', value)} />\n                    {\n                        errorCode==204 && errorMessage !== '' &&\n                        <ErrorComponent hide={hideErrorMessage} message={errorMessage}></ErrorComponent>\n                    }\n                    <InputText\n                        label='Email'\n                        width={width}\n                        onBlur={handleCheckEmail}\n                        value={email}\n                        onChange={(val) => {\n                            const email = validateEmail(val)\n                            const errMsg = MessagingError.email.isRequired\n                            if(!email) {\n                                setErrorMessage(errMsg.error, errMsg.message)\n                            } else {\n                                hideErrorMessage()\n                            }\n                            setStateRegistration('email', val)\n                        }} />\n                    <Button loading={isFetchingApi} color=\"secondary\" label={'Register'} onClick={() => {\n                        sagaRegistration()\n                    }}/>\n                </Paper>\n            </Grid>\n        </Container>\n        </React.Fragment>\n    )\n}\n\nconst mtp = ({ErrorHandling, Registration}) => {\n    const {\n        errorCode,\n        errorMessage\n    } = ErrorHandling\n\n    const { mobileNumber,\n        firstName,\n        lastName,\n        gender,\n        email,\n        showLoginButton,\n        isFetchingApi\n    } = Registration\n\n    return { \n        errorCode, \n        errorMessage, \n        mobileNumber, \n        firstName, \n        lastName,\n        gender,\n        email,\n        showLoginButton,\n        isFetchingApi\n    }\n}\n\nRegistrationForm.propTypes = {\n    //Standart error to display the error component\n    errorCode: function(props, propName, componentName) {\n        const propValue = props[propName]\n        if (typeof propValue === 'string') return\n        if (typeof propValue === 'number') return\n        return new Error(`${componentName} only accept string, or number`)\n    },\n    errorMessage: PropTypes.string,\n    //State of payload to fetching api\n    firstName: PropTypes.string,\n    lastName: PropTypes.string,\n    gender: PropTypes.number,\n    email: PropTypes.string,\n    //To display login button\n    showLoginButton: PropTypes.bool,\n    //To display loading text\n    isFetchingApi: PropTypes.bool,\n    //Action creator to handle process\n    sagaRegistration: PropTypes.func,\n    setStateRegistration: PropTypes.func,\n    setDobStateRegistration: PropTypes.func,\n    setErrorMessage: PropTypes.func,\n    hideErrorMessage: PropTypes.func\n}\n\nexport default connect(mtp, {\n    sagaRegistration,\n    setStateRegistration, \n    setDobStateRegistration,\n    setErrorMessage,\n    hideErrorMessage\n})(withStyles(styles)(RegistrationForm))","/**\n * Before register all field should be checked\n * This will return error message if not valid\n * @param {Object} state \n */\nexport const checkRequiredValidation = (state) => {\n    if (state.mobileNumber == '') return {\n        isValid: false,\n        message: 'Please enter mobile phone number'\n    }\n\n    else if (state.firstName == '') return {\n        isValid: false,\n        message: 'Please enter first name'\n    }\n\n    else if (state.lastName == '') return {\n        isValid: false,\n        message: 'Please enter last name'\n    }\n\n    else if (state.email == '') return {\n        isValid: false,\n        message: 'Please enter email address'\n    }\n\n    else return { isValid: true, message: 'Success'}\n}\n\n/**\n * Produce input as a 62 in first key\n * @param {String} mobileNumber \n */\nexport const remapMobileNumber = (mobileNumber) => {\n    var totalArr = mobileNumber.length\n    var firstDigit = mobileNumber.substr(0, 1)\n    if(firstDigit == '0') {\n        var number = mobileNumber.substr(1, totalArr)\n        return `62${number}`\n    }\n    return mobileNumber\n}\n\n/**\n * Email validate with min 6 char\n * @param {String} email \n */\nexport function validateEmail(email) {\n    if(email.length > 6) {\n        let data = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{1,6})+$/;\n        if (data.test(String(email).toLowerCase()) === false) return false;\n        return true;\n    }\n    return true;\n}","import Colors from '../constant/Colors'\n\nexport default {\n    palette: {\n        primary: {\n            light: Colors.primary,\n            main: Colors.primary,\n            dark: Colors.primary,\n            contrastText: '#fff'\n        },\n        secondary: {\n            light: Colors.secondary,\n            main: Colors.secondary,\n            dark: Colors.secondary,\n            contrastText: '#fff'\n        },\n        error: {\n            light: Colors.error,\n            main: Colors.error,\n            dark: Colors.error,\n            contrastText: '#fff'\n        },\n        success: {\n            light: Colors.success,\n            main: Colors.success,\n            dark: Colors.success,\n            contrastText: '#fff'\n        },\n    },\n    status: {\n        danger: 'orange',\n    },\n    \n    typography: {\n        button: {\n            fontWeight: 400,\n            textAlign: 'capitalize'\n        },\n    }\n};\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Colors from '../constant/Colors'\nimport Button from '../coreComponent/Button'\nimport { connect } from 'react-redux'\nimport { hideLoginButtonRegistration } from '../actions/Registration'\nconst Style = {\n    footer: {\n        marginTop: 30, \n        width: '100%',\n        padding: 30,\n        background:\n        Colors.secondary,\n        contentAlign: 'center'\n    },\n    \n    footerTitle: { \n        color: Colors.white, \n        textAlign: 'center'\n    }\n}\n\n/**\n * Render the button login component\n * @param {Function} props \n */\nfunction ButtonLogin(props) {\n    const location = `${process.env.PUBLIC_URL}`;\n    const { action } = props\n    return(\n        <Button \n            label={'Login'} \n            onClick={() => {\n                action()\n                props.history.push(`${location}/login`, {})\n            }} />\n    )\n}\n\n/**\n * Render the content of footer\n */\nfunction ContentFooter() {\n    return(\n        <h1 style={Style.footerTitle}>Footer</h1>\n    )\n}\n\n/**\n * Connected to reducer Registration\n * The Button login component is show only\n * success registration process\n * @param {Object} props \n */\nfunction Footer(props) {\n    const {hideLoginButtonRegistration, showLoginButton} = props\n    return(\n        <div style={Style.footer}>\n            {\n                showLoginButton ? <ButtonLogin action={hideLoginButtonRegistration} {...props}/> : <ContentFooter />\n            }\n        </div>\n    )\n}\n\nFooter.propTypes = {\n    showLoginButton: PropTypes.bool.isRequired,\n    hideLoginButtonRegistration: PropTypes.func.isRequired\n}\n\nconst mtp = ({Registration}) => {\n    const {showLoginButton, hideLoginButtonRegistration} = Registration\n    return {showLoginButton, hideLoginButtonRegistration}\n}\n\nexport default connect(mtp, {hideLoginButtonRegistration})(Footer)","import React from 'react'\nimport RegistrationForm from '../component/RegistrationForm'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core'\nimport PrimaryTheme from '../theme/PrimaryTheme'\nimport Footer from '../component/Footer'\n\nfunction Registration(props) {\n    console.log('Props Registration', props)\n    let theme = createMuiTheme(PrimaryTheme)\n    return(\n        <MuiThemeProvider theme={theme}>\n            <RegistrationForm {...props} />\n            <Footer {...props} />\n        </MuiThemeProvider>\n    )\n}\n\nexport default Registration","import React from 'react'\nimport Footer from '../component/Footer'\nimport Colors from '../constant/Colors'\n\nconst Style = {\n    container: {\n        width: '100vw',\n        height: '100vh'\n    },\n    login: {\n        background: Colors.greySoft,\n        width: '100%',\n        height: 500\n    },\n    titleLogin: {\n        color: Colors.primary,\n        textAlign: 'center'\n    },\n    link: {\n        marginTop: 15,\n        padding: 15,\n        background: Colors.primary,\n        color: Colors.white,\n        margin: '0px auto',\n        display: 'table',\n        textDecoration: 'none',\n        borderRadius: 5\n    }\n}\n\nfunction Login(props) {\n    console.log('Props login', props)\n    function linkHover(e) {\n        e.target.style.background = Colors.secondary\n    }\n\n    function linkDefault(e) {\n        e.target.style.background = Colors.primary\n    }\n\n    return(\n        <div style={Style.container}>\n            <div style={Style.login}>\n                <h4 style={Style.titleLogin}>This is login page</h4>\n                <button \n                    onMouseOver={linkHover}\n                    onMouseOut={linkDefault}\n                    style={Style.link}\n                    onClick={() => props.history.goBack()}>\n                        Back to register\n                </button>\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nexport default Login","import React from 'react'\nimport { Provider, ReactReduxContext} from 'react-redux'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { ConnectedRouter } from 'connected-react-router'\nimport './css/Main.css'\nimport configureStore, { history } from './store'\nimport Registration from '../src/template/Registration'\nimport Login from '../src/template/Login'\n\nconst store = configureStore()\n\nfunction App({ history, context }) {\n    const location = `${process.env.PUBLIC_URL}`;\n    return(\n        <ConnectedRouter history={history} context={context}>\n            <Switch>\n                <Route exact path={`${location}/`} render={() => <Redirect to={`${location}/register`} />} />\n                <Route path={`${location}/register`} render={({ staticContext, ...props}) => <Registration {...props}/>} />\n                <Route path={`${location}/login`} render={({ staticContext, ...props}) => <Login {...props}/>} />\n            </Switch>\n        </ConnectedRouter>\n    )\n}\n\nfunction MitraisApp() {\n    return(\n        <Provider store={store} context={ReactReduxContext}>\n            <App history={history} context={ReactReduxContext} />\n        </Provider>\n    )\n}\n\nexport default MitraisApp","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}