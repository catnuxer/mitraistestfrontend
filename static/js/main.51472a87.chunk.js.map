{"version":3,"sources":["reducers/ErrorHandling.js","constant/ErrorHandling.js","constant/Registration.js","reducers/Registration.js","reducers/index.js","saga/Registration.js","actions/Registration.js","saga/index.js","persist/index.js","store/index.js","hook/WindowDimmension.js","constant/Colors.js","coreComponent/InputText.js","coreComponent/Button.js","coreComponent/ItemSelectOptions.js","coreComponent/SelectOptions.js","baseComponent/DobButton.js","coreComponent/RadioButton.js","baseComponent/GenderOptions.js","validation/MessagingError.js","baseComponent/ErrorComponent.js","component/RegistrationForm.js","actions/ErrorHandling.js","validation/RegisterValidation.js","theme/PrimaryTheme.js","component/Footer.js","template/Registration.js","template/Login.js","App.js","serviceWorker.js","index.js"],"names":["initState","errorCode","errorMessage","showErrorComponent","ErrorHandling","state","action","type","payload","code","message","mobileNumber","firstName","lastName","dob","day","month","year","gender","email","showLoginButton","isRegistered","isFetchingApi","Registration","keyState","valState","newState","keyDob","valDob","dobState","statusFetch","__doRegister","doRegister","rootSaga","put","takeEvery","all","fork","registration","history","RootPersistedConfig","timeout","key","storage","whitelist","blacklist","createBrowserHistory","composeEnhancers","compose","persistedReducer","persistReducer","combineReducers","router","connectRouter","sagaMiddleware","createSagaMiddleware","routeMiddleware","routerMiddleware","middlewares","logger","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","InputText","props","Style","container","overflow","display","position","input","flexGrow","padding","border","marginBottom","fontSize","outline","boxShadow","error","style","onChange","event","target","value","placeholder","label","onFocus","onBlur","MyButton","Button","color","variant","fullWidth","onClick","loading","ItemSelectOptions","open","styleItem","content","labelItems","cursor","textAlign","float","borderBottom","labelContent","marginLeft","show","itemSelect","length","background","WebkitBoxShadow","MozBoxShadow","zIndex","top","left","right","maxHeight","map","item","index","toString","className","onSelect","styles","filterButtonStyle","Color","labelFilterStyleButton","labelFilterStyleIcon","SelectOptions","this","setState","labelButton","handleClick","bind","data","handleFilterStyle","renderButtonFilter","renderItemSelectOption","Component","propTypes","PropTypes","array","isRequired","func","withStyles","theme","paddingRight","classes","WindowDimmension","xsDob","smDob","currentMonth","Date","getMonth","setDay","setMonth","setYear","rangeDay","setRangeDay","labelDay","setLabelDay","labelMonth","setLabelMonth","labelYear","setLabelYear","getDay","y","m","date","getDate","i","a","push","Grid","xs","sm","moment","monthsShort","obj","onChangeMonth","x","handleClickMonth","onChangeDay","minYear","getFullYear","unshift","getYear","onChangeYear","handleClickYear","RadioButton","FormControlLabel","control","Radio","checked","GenderOptions","align","success","isExist","box","Colors","text","arrow","margin","borderLeft","borderRight","borderTop","bottom","ErrorComponent","TransitionGroup","CSSTransition","classNames","hide","connect","sagaRegistration","setStateRegistration","setDobStateRegistration","setErrorMessage","hideErrorMessage","root","grid","gridBlock","footerArea","paper","spacing","palette","secondary","title","Container","smSize","Paper","elevation","Typography","component","val","totalArr","substr","number","remapMobileNumber","test","String","toLowerCase","validateEmail","errMsg","MessagingError","primary","light","main","dark","contrastText","status","danger","typography","button","fontWeight","footer","marginTop","contentAlign","footerTitle","ButtonLogin","ContentFooter","hideLoginButtonRegistration","console","log","createMuiTheme","PrimaryTheme","login","titleLogin","link","textDecoration","borderRadius","Login","onMouseOver","e","onMouseOut","href","goBack","store","createStore","applyMiddleware","run","configureStore","App","context","exact","path","render","to","staticContext","MitraisApp","ReactReduxContext","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","unregister","catch"],"mappings":"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","file":"static/js/main.51472a87.chunk.js","sourcesContent":["import {\n    SHOW_ERROR_MESSAGE,\n    HIDE_ERROR_MESSAGE,\n    SET_ERROR_MESSAGE\n} from '../constant/ErrorHandling'\n\nconst initState = {\n    errorCode: '',\n    errorMessage: '',\n    showErrorComponent: false\n}\n\nexport default function ErrorHandling(state = initState, action) {\n    switch (action.type) {\n        case SET_ERROR_MESSAGE:\n\n            const {code, message} = action.payload\n\n            return{\n                ...state,\n                errorCode: code,\n                errorMessage: message,\n                showErrorComponent: true\n            }\n        \n        case SHOW_ERROR_MESSAGE:\n            return {\n                ...state,\n                showErrorComponent: true\n            }\n\n        case HIDE_ERROR_MESSAGE:\n            return {\n                ...state,\n                ...initState\n            }\n        \n        default:\n            return state\n    }\n}","/**\n * Error handling definition\n * to manage state reducer errorHandling related with:\n * show error component, hide error component,\n * set messaging error from api Auth request\n */\n\nexport const SHOW_ERROR_MESSAGE = 'show_error_message'\nexport const HIDE_ERROR_MESSAGE = 'hide_error_message'\nexport const SET_ERROR_MESSAGE = 'set_error_message'","/**\n * Registration definition:\n * To set value of state registration as SET_STATE_REGISTRATION\n * \n * Task runner on handle by SAGA_REGISTRATION related on condition\n * when the users click the register button\n * \n * To Toogle the login button, use it SHOW_LOGIN_BUTTON_REGISTRATION\n * and HIDE_LOGIN_BUTTON_REGISTRATION\n * \n * And for set the sucess of registration call SUCCESS_REGISTRATION in saga\n * based on condition no error from response.\n * \n * To do manage the loading screen or button, etc.\n * You can use SET_IS_FETCHING_API with input true or false\n */\nexport const SET_STATE_REGISTRATION = 'set_state_registration'\nexport const SET_DOB_STATE_REGISTRATION = 'set_dob_state_registration'\nexport const SAGA_REGISTRATION = 'saga_registration'\nexport const SHOW_LOGIN_BUTTON_REGISTRATION = 'show_login_button_registration'\nexport const HIDE_LOGIN_BUTTON_REGISTRATION = 'hide_login_button_registration'\nexport const SUCCESS_REGISTRATION = 'success_registration'\nexport const SET_IS_FETCHING_API = 'set_is_fetching_api'","import {\n    SET_STATE_REGISTRATION,\n    SET_DOB_STATE_REGISTRATION,\n    SHOW_LOGIN_BUTTON_REGISTRATION,\n    HIDE_LOGIN_BUTTON_REGISTRATION,\n    SUCCESS_REGISTRATION,\n    SET_IS_FETCHING_API\n} from '../constant/Registration'\n\nconst initState = {\n    mobileNumber : '',\n    firstName: '',\n    lastName: '',\n    dob: {\n        day: '',\n        month: '',\n        year: '',\n    },\n    gender: 2, //0: Female, 1: Male\n    email: '',\n    showLoginButton: false,\n    isRegistered: false,\n    isFetchingApi: false\n}\n\n/**\n * Reducers Registration to do manage the state\n * of registration page\n * @param {Object} state \n * @param {Function} action \n */\nexport default function Registration(state = initState, action) {\n    switch (action.type) {\n        case SET_STATE_REGISTRATION:\n            const { keyState, valState } = action.payload\n            const newState = {...state}\n            newState[keyState] = valState\n            return {\n                ...state,\n                ...newState\n            }\n        \n        case SET_DOB_STATE_REGISTRATION:\n            const { keyDob, valDob } = action.payload\n            const dobState = {...state.dob}\n            dobState[keyDob] = valDob\n            return {\n                ...state,\n                dob: {...dobState}\n            }\n\n        case SHOW_LOGIN_BUTTON_REGISTRATION:\n            return {\n                ...state,\n                showLoginButton: true\n            }\n        \n        case HIDE_LOGIN_BUTTON_REGISTRATION:\n            return {\n                ...state,\n                showLoginButton: false\n            }\n            \n        case SUCCESS_REGISTRATION:\n            return {\n                ...initState,\n                isRegistered: true\n            }\n        case SET_IS_FETCHING_API:\n            const {statusFetch} = action.payload\n            return {\n                ...state,\n                isFetchingApi: statusFetch\n            }\n        default:\n            return state\n    }\n}","import {combineReducers} from 'redux'\nimport {connectRouter} from 'connected-react-router'\nimport ErrorHandling from './ErrorHandling'\nimport Registration from './Registration'\n\nexport default (history) => combineReducers({\n    router: connectRouter(history),\n    ErrorHandling,\n    Registration\n})","import { all, fork, takeEvery, select, put, delay, call } from 'redux-saga/effects'\nimport { SAGA_REGISTRATION } from '../constant/Registration'\nimport { showLoginButtonRegistration, setSuccessRegistration, setIsFetchingApi } from '../actions/Registration'\nimport { setErrorMessage } from '../actions/ErrorHandling'\nimport AuthApi from '../api/AuthApi'\n\nconst apiRegister = payload => AuthApi.register({payload}).then(resp => resp).catch(err => err);\n\n/**\n * Register Button Task Runner\n */\nexport function* __doRegister() {\n    // yield put(setIsFetchingApi(true));\n    // try {\n    //     const payload = yield select( state => state.Registration )\n    //     payload.dob = `${payload.dob.year}-${payload.dob.month}-${payload.dob.day}`\n    //     const response = yield call(apiRegister, payload);\n    //     if(response.error !== 0) {\n    //         yield put(setErrorMessage(response.error, response.message))\n    //     } else {\n    //         yield put(setSuccessRegistration())\n    //         yield put(showLoginButtonRegistration())\n    //     }\n    // } catch (error) {\n    //     throw error\n    // }\n    // yield put(setIsFetchingApi(false))\n\n    yield put(setSuccessRegistration())\n    yield put(showLoginButtonRegistration())\n}\n\nexport function* doRegister() {\n    yield takeEvery(SAGA_REGISTRATION, __doRegister)\n}\n\nexport default function* rootSaga() {\n    yield all([\n        fork(doRegister)\n    ])\n}","import {\n    SET_STATE_REGISTRATION,\n    SET_DOB_STATE_REGISTRATION,\n    SAGA_REGISTRATION,\n    SHOW_LOGIN_BUTTON_REGISTRATION,\n    HIDE_LOGIN_BUTTON_REGISTRATION,\n    SUCCESS_REGISTRATION,\n    SET_IS_FETCHING_API\n} from '../constant/Registration'\n\n/**\n * Use to manage value of state global Registration\n * related on reducers Registration\n * e.g keyState = mobileNumber and valState = 0812XXXX\n * @param {String} keyState \n * @param {String} valState \n */\nexport const setStateRegistration = (keyState: String, valState: String) => {\n    return {\n        type: SET_STATE_REGISTRATION,\n        payload: { keyState, valState }\n    }\n}\n\n/**\n * Use to manage value of state dob Registration\n * related on reducers Registration\n * e.g keyDob = month and valDob = 1\n * @param {String} keyDob \n * @param {Number} valDob \n */\nexport const setDobStateRegistration = (keyDob: String, valDob: Number) => {\n    return {\n        type: SET_DOB_STATE_REGISTRATION,\n        payload: { keyDob, valDob }\n    }\n}\n\n/**\n * Task runner on saga, when user click the register button\n */\nexport const sagaRegistration = () => {\n    return {\n        type: SAGA_REGISTRATION\n    }\n}\n\n/**\n * Use this action to show login button component\n * when fetching with api registration\n * This action should be handle in saga related on\n * sagaRegistration\n */\nexport const showLoginButtonRegistration = () => {\n    return {\n        type: SHOW_LOGIN_BUTTON_REGISTRATION\n    }\n}\n\n/**\n * Use this action to hide the login button component\n * after the process of success registration \n */\nexport const hideLoginButtonRegistration = () => {\n    return {\n        type: HIDE_LOGIN_BUTTON_REGISTRATION\n    }\n}\n\n/**\n * Call success conditions and reset the state of\n * Registration as initial state.\n * This should be call when registration success.\n * So this action will call in saga related to\n * SagaRegistration.\n */\nexport const setSuccessRegistration = () => {\n    return {\n        type: SUCCESS_REGISTRATION\n    }\n}\n\n/**\n * Manage the UI of screen or button\n * It can use on handle the loading of\n * component.\n * @param {Boolean} statusFetch \n */\nexport const setIsFetchingApi = (statusFetch) => {\n    return {\n        type: SET_IS_FETCHING_API,\n        payload: { statusFetch }\n    }\n}","import {all, fork} from 'redux-saga/effects'\nimport registration from './Registration'\n\nexport default function*(){\n    yield all([\n        fork(registration)\n    ]);\n}\n","import storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nexport const RootPersistedConfig = {\n    timeout: null,\n    key: 'root',\n    storage: storage,\n    whitelist: [\n        ''\n    ],\n    blacklist: [\n        ''\n    ]\n}\n","import { createBrowserHistory } from 'history'\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { routerMiddleware } from 'connected-react-router'\nimport { persistReducer } from 'redux-persist'\nimport reducer from '../reducers';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../saga';\nimport { RootPersistedConfig } from '../persist'\nexport const history = createBrowserHistory()\n\nconst composeEnhancers = compose\nconst persistedReducer = persistReducer(RootPersistedConfig, reducer(history))\nconst sagaMiddleware = createSagaMiddleware()\nconst routeMiddleware = routerMiddleware(history)\nconst middlewares = [sagaMiddleware,logger]\n\nexport default function configureStore (initState){\n    const store = createStore(persistedReducer, initState, composeEnhancers(applyMiddleware(...middlewares), applyMiddleware(routeMiddleware)))\n    sagaMiddleware.run(rootSaga);\n    if(module.hot){\n        module.hot.accept('../reducers/index',()=>{\n            const nextReducer = require('../reducers/index')\n            store.replaceReducer(nextReducer)\n        })\n    }\n    return store;\n}\n","import { useEffect, useState } from \"react\";\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\n/**\n * This function will produce as an object { width, height }\n * Use to get value of width heigh related on size breakpoint\n * of component elements\n */\nexport default function useWindowDimensions() {\n    const [windowDimensions, setWindowDimensions] = useState(\n        getWindowDimensions()\n    );\n\n    useEffect(() => {\n    function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n\n    return windowDimensions;\n}","/**\n * Use the colors as definition\n * Primary: Black\n * Secondary: Purple\n * Success: Green\n * etc\n */\nconst primary = '#000000';\nconst secondary = '#9c27b0';\nconst success = '#388e3c';\nconst error = '#f4382d';\nconst grey = '#2d2d2d';\nconst greyLighteen = '#958d8d';\nconst greySoft = '#fafafa';\nconst white = '#FFF'\n\n\nexport default {\n    primary,\n    secondary,\n    success,\n    error,\n    grey,\n    greyLighteen,\n    greySoft,\n    white\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\n/**\n * This InputText Component have 3 main props:\n * onChange is a function\n * label is is a string\n * value is a string\n * @param {Object} props \n */\nfunction InputText(props) {\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        props.onChange(event.target.value);\n    }\n    \n    const Style = {\n        container: {\n            overflow: 'hidden',\n            display: 'flex',\n            position: 'relative',\n        },\n        input: {\n            flexGrow: 1,\n            width: '100%',\n            padding: 10,\n            border: `1px solid black`,\n            marginBottom: 15,\n            fontSize: 15\n        },\n        '&::focus': {\n            outline: 'none',\n            border: `1px solid black`,\n            boxShadow: '0px 0px 0px 0.1'\n        },\n        error: {\n            position: 'relative',\n            width: '100%'\n        }\n    }\n\n    return(\n        <div style={Style.error}>\n            <div style={Style.container}>\n                <input \n                    type=\"text\" \n                    style={Style.input} \n                    onChange={handleChange} \n                    value={props.value}\n                    placeholder={props.label}\n                    onFocus={props.onFocus}\n                    onBlur={props.onBlur}\n                    />\n            </div>\n        </div>\n    )\n}\nInputText.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n}\n\nexport default InputText","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '@material-ui/core/Button'\n\n/**\n * onClick Props will do domething\n * related on props it self\n * @param {Function} props \n */\nfunction MyButton(props) {\n    return(\n        <Button \n            color={props.color}\n            variant=\"contained\"\n            fullWidth={true}\n            onClick={() => props.onClick()}>\n        {\n            props.loading ? 'Loading' : props.label\n        }\n        </Button>\n    )\n}\n\nMyButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    label: PropTypes.string.isRequired,\n}\n\nexport default MyButton","import React from 'react'\nimport PropTypes from 'prop-types'\n\n/**\n * ItemSelectOptions is a child component\n * @param {Object} props \n * This child component will render data from props\n * related with itemSelect props it self\n */\nfunction ItemSelectOptions(props) {\n\n    const styleItem = {\n        content: {\n            width: '100%',\n        },\n        labelItems: {\n            cursor: 'pointer',\n            width: '100%',\n            textAlign: 'left',\n            float: 'left',\n            padding: '12px 0px',\n            borderBottom: '1px solid rgb(239, 239, 239, 1)',\n            display: 'inline-block'\n        },\n        labelContent: {\n            marginLeft: 15,\n            fontSize: 14\n        }\n    }\n\n    const styleActive = (open) => ({\n        width: '100%',\n        background: 'white',\n        border: '1px solid rgb(239, 239, 239, 1)',\n        WebkitBoxShadow: '0px 3px 5px 0px rgba(163,163,163,0.5)',\n        MozBoxShadow: '0px 3px 5px 0px rgba(163,163,163,0.5)',\n        boxShadow: '0px 3px 5px 0px rgba(163,163,163,0.5)',\n        position: 'absolute',\n        zIndex: 3,\n        top: 50,\n        left: 0,\n        right: 0,\n        display: open ? 'block' : 'none',\n        maxHeight: 200,\n        overflow: 'scroll'\n    })\n    \n    const {show, itemSelect} = props\n    if(itemSelect.length < 1) {\n        return null;\n    }\n\n    return(\n        <div style={styleActive(show)}>\n            {\n                itemSelect.map((item, index) => {\n                return(\n                    <div \n                        key={index.toString()} \n                        style={styleItem.content} \n                        className={'clearfix'}>\n                        <div \n                            style={styleItem.labelItems} \n                            onClick={() => props.onSelect(item)}>\n                            <span style={styleItem.labelContent}>{item.label}</span>\n                        </div>\n                    </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nItemSelectOptions.propTypes = {\n    show: PropTypes.bool.isRequired,\n    itemSelect: PropTypes.array.isRequired,\n    onSelect: PropTypes.func.isRequired\n}\n\nexport default ItemSelectOptions ","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ItemSelectOptions from './ItemSelectOptions'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport Color from '../constant/Colors'\n\nconst styles = {\n    container: {\n        position: 'relative'\n    },\n    filterButtonStyle: {\n        border: `1px solid ${Color.primary}`\n    },\n    labelFilterStyleButton: {\n        fontSize: 14,\n        float: 'left',\n        padding: 10\n    },\n    labelFilterStyleIcon: {\n        float: 'right'\n    }\n}\n\n/**\n * This class component have a child component ItemSelectOptions\n * You can extends this class and overwriding the function\n * renderItemSelectOption to do render the child components\n */\nclass SelectOptions extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            open: false\n        }\n    }\n\n    handleFilterStyle() {\n        this.setState({open: !this.state.open})\n    }\n\n    handleClick() {\n        this.setState({open: !this.state.open})\n    }\n\n    /**\n     * You can overwrite this function to\n     * render the button filter\n     */\n    renderButtonFilter(){\n        const {labelButton} = this.props;\n        return(\n            <div style={styles.filterButtonStyle} className={'clearfix'} onClick={this.handleClick.bind(this)}>\n                <span style={styles.labelFilterStyleButton}>{labelButton}</span>\n                <span style={styles.labelFilterStyleIcon}>\n                    <ArrowDropDownIcon color=\"primary\" fontSize={'large'}/>\n                </span>\n            </div>\n        )\n    }\n\n    /**\n     * You can overwrite this function\n     * to render the list of filter\n     */\n    renderItemSelectOption(){\n        const {data} = this.props;\n        return(\n            <ItemSelectOptions\n                show={this.state.open} \n                itemSelect={data}\n                onSelect={(value) => this.props.onSelect(value)}\n            />\n        )\n    }\n\n    render(){\n        return(\n            <div style={styles.container} onClick={() => this.handleFilterStyle()}>\n                {this.renderButtonFilter()}\n                {this.renderItemSelectOption()}\n            </div>\n        )\n    }\n}\n\n\nSelectOptions.propTypes = {\n    labelButton: PropTypes.string.isRequired,\n    data: PropTypes.array.isRequired\n}\n\nexport default SelectOptions","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport SelectOptions from '../coreComponent/SelectOptions'\nimport WindowDimmension from '../hook/WindowDimmension'\nimport moment from 'moment'\n\nconst styles = theme => ({\n    dob: {\n        paddingRight: 0,\n        marginBottom: 15\n    }\n})\n\n/**\n * Date of birth button functionality\n * @param {Object} props\n * Logicaly DobButton is when the month button clicked\n * range date will be generate based on year and month\n * Year button have logicaly same like month button\n */\nfunction DobButton(props) {\n    const { classes } = props\n    const { width } = WindowDimmension()\n\n    const xsDob = () => {\n        if(width < 786) return 12\n        return 6\n    }\n\n    const smDob = () => {\n        if(width < 786) return 12\n        return 4\n    }\n\n    const currentMonth = new Date().getMonth() + 1;\n    const [day, setDay] = useState({value: '01', label: '1'});\n    const [month, setMonth] = useState({value: currentMonth, label: 'JAN'});\n    const [year, setYear] = useState({value: '2020', label: '2020'});\n    const [rangeDay, setRangeDay] = useState([1]);\n    const [labelDay, setLabelDay] = useState('Date');\n    const [labelMonth, setLabelMonth] = useState('Month');\n    const [labelYear, setLabelYear] = useState('Year');\n\n    function handleClickMonth(obj) {\n        setMonth(obj)\n        props.onChangeMonth(obj.value)\n        const x = getDay(year.value, obj.value)\n        setRangeDay(x)\n        setLabelMonth(obj.label);\n    }\n\n    function handleClickYear(obj) {\n        setYear(obj)\n        props.onChangeYear(obj.value)\n        const x = getDay(obj.value, month.value)\n        setRangeDay(x)\n        setLabelYear(obj.label)\n    }\n\n    function handleClickDay(obj) {\n        setDay(obj)\n        props.onChangeDay(obj.value)\n        setLabelDay(obj.label)\n    }\n\n    const getDay = (y, m) => {\n        const date = new Date(y, m, 0).getDate();\n        let day = []\n        for (let i = 1; i <=date; i++) {\n            const a = i < 10 ? i : i;\n            day.push({value: a, label: i})\n        }\n        return day;\n    }\n    \n    const getMonth = () => {\n        const m = moment.monthsShort();\n        let month = [];\n        for (let i = 1; i <=m.length; i++) {\n            const a = i < 10 ? i : i;\n            month.push({value: a, label: m[i - 1]})\n        }\n        return month;\n    }\n    \n    const getYear = () => {\n        const date = new Date()\n        let year = []\n        let minYear = date.getFullYear()\n        for (let i = 0; i <= minYear; i++) {\n            if(i > 1945) {\n                year.unshift({value: i, label: i})\n            }\n        }\n        return year;\n    }\n\n    return(\n        <Grid container item xs={12}>\n            <>\n            <Grid item xs={xsDob()} sm={smDob()} style={{ paddingRight: width > 786 ? 10 : 0}} className={classes.dob}>\n                <SelectOptions\n                    labelButton={labelMonth}\n                    data={getMonth()}\n                    onSelect={(value) => handleClickMonth(value)} />\n            </Grid>\n            <Grid item xs={xsDob()} sm={smDob()} style={{ paddingRight: width > 786 ? 10 : 0}} className={classes.dob}>\n                <SelectOptions\n                    labelButton={labelDay}\n                    data={rangeDay}\n                    onSelect={(value) => handleClickDay(value)} />\n            </Grid>\n            <Grid item xs={xsDob()} sm={smDob()} className={classes.dob}>\n                <SelectOptions\n                    labelButton={labelYear}\n                    data={getYear()}\n                    onSelect={(value) => handleClickYear(value)} />\n            </Grid>\n            </>\n        </Grid>\n    )\n}\n\nSelectOptions.propTypes = {\n    data: PropTypes.array.isRequired,\n    onSelect: PropTypes.func.isRequired\n}\nexport default withStyles(styles)(DobButton)","import React, { setState, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { FormControlLabel, Radio } from '@material-ui/core'\n\n/**\n * Radio Button should have properties checked and label\n * @param {Object} props \n */\nfunction RadioButton(props) {\n\n    const [state, setState] = useState(false)\n    \n    const handleChange = event => {\n        setState(event)\n        props.onChange(event)\n    }\n\n    return(\n        <FormControlLabel\n            control={\n                <Radio color=\"primary\" checked={props.checked}/>\n            }\n            label={props.label}\n            onChange={handleChange}\n        />\n    )\n}\n\nRadioButton.propTypes = {\n    checked: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired\n}\n\nexport default RadioButton","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Grid from '@material-ui/core/Grid'\nimport RadioButton from '../coreComponent/RadioButton'\n\n/**\n * Gender options define as male = 1 and female = 0\n * @param {Object} props \n */\nfunction GenderOptions(props) {\n    return(\n        <Grid container item xs={12}>\n            <Grid item xs={6} sm={6} align={\"left\"}>\n                <RadioButton \n                    label={'male'} \n                    checked={props.checked === 1 ? true : false} \n                    onChange={(event) => props.onChange(1)}/>\n            </Grid>\n            <Grid item xs={6} sm={6} align={\"left\"}>\n                <RadioButton \n                    label={'female'} \n                    checked={props.checked === 0 ? true : false} \n                    onChange={(event) => props.onChange(0)}/>\n            </Grid>\n        </Grid>\n    )\n}\n\nGenderOptions.propTypes = {\n    checked: PropTypes.number.isRequired,\n    onChange: PropTypes.func.isRequired\n}\n\nexport default GenderOptions","/**\n * Standart messaging error on\n * Registration\n */\nexport default {\n    mobileNumber: {\n        isRequired: {\n            error: 201,\n            success: false,\n            message: \"Mobile number is required\"\n        },\n        isExist: {\n            error: 201, \n            success: false, \n            message: \"Your mobile number is exist, plase use another\"\n        },\n        isNotValid: {\n            error: 201, \n            success: false, \n            message: \"Please enter valid indonesian mobile number\"\n        }\n    },\n    firstName: {\n        isRequired: {\n            error: 202,\n            success: false,\n            message: \"First name is required\"\n        }\n    },\n    lastName: {\n        isRequired: {\n            error: 203,\n            success: false,\n            message: \"Last name is required\"\n        }\n    },\n    email: {\n        isRequired: {\n            error: 204,\n            success: false,\n            message: \"Email is required and should valid email address\"\n        },\n        isExist: {\n            error: 202,\n            success: false,\n            message: \"Your email is not available, plase use other\"\n        }\n    }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Colors from '../constant/Colors'\nimport {\n    CSSTransition,\n    TransitionGroup\n} from 'react-transition-group'\n\nconst Style = {\n    box: {\n        padding: '10px 0px',\n        background: Colors.error,\n        border: `1px solid ${Colors.greyLighteen}`,\n        position: 'relative',\n        marginBottom: 15\n    },\n    text: {\n        color: Colors.white,\n        fontSize: 14\n    },\n    arrow: {\n        margin: `0 auto`,\n        width: 0,\n        height: 0,\n        borderLeft: '10px solid transparent',\n        borderRight: '10px solid transparent',\n        borderTop: `10px solid ${Colors.error}`,\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: -10\n    }\n}\n\n/**\n * Error component have object with message\n * e.g { message: 'Please enter valid indonesian phone number' }\n * @param {Object} props \n */\nfunction ErrorComponent(props) {\n    return(\n        <TransitionGroup>\n            <CSSTransition timeout={500} classNames=\"error\">\n                <div style={Style.box} onClick={() => props.hide()}>\n                    <div style={Style.arrow}></div>\n                    <span style={Style.text}>{props.message}</span>\n                </div>\n            </CSSTransition>\n        </TransitionGroup>\n    )\n}\n\nErrorComponent.propTypes = {\n    message: PropTypes.string.isRequired,\n    hide: PropTypes.func.isRequired\n}\n\nexport default ErrorComponent","import React, { useState, useEffect } from 'react'\nimport {withRouter} from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Grid, Paper, Container, Typography } from '@material-ui/core'\nimport WindowDimmension from '../hook/WindowDimmension'\nimport Colors from '../constant/Colors'\nimport InputText from '../coreComponent/InputText'\nimport Button from '../coreComponent/Button'\nimport DobButton from '../baseComponent/DobButton'\nimport GenderOptions from '../baseComponent/GenderOptions'\nimport { \n    sagaRegistration,\n    setStateRegistration,\n    setDobStateRegistration\n} from '../actions/Registration'\nimport {\n    setErrorMessage,\n    hideErrorMessage\n} from '../actions/ErrorHandling'\nimport { connect } from 'react-redux'\nimport { remapMobileNumber, validateEmail } from '../validation/RegisterValidation'\nimport MessagingError from '../validation/MessagingError'\nimport ErrorComponent from '../baseComponent/ErrorComponent'\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1\n    },\n    grid: {\n        margin: `0px auto`\n    },\n    gridBlock: {\n        margin: `0px auto`,\n        left: 0,\n        right: 0,\n        width: '100%',\n        height: 464,\n        position: 'absolute',\n        background: '#b9b9b996',\n        zIndex: 3000\n    },\n    footerArea: {\n        width: '100%',\n        position: 'absolute',\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        background: Colors.greySoft\n    },\n    title: {\n        textAlign: 'left',\n        marginBottom: 15\n    }\n})\n\n/**\n * RegistrationForm connected with reducers Registration\n * ErrorComponent will show if some component value is blank\n * or receive the error when fetching with api AuthApi register\n * @param {Object} props \n */\nfunction RegistrationForm(props) {\n    //Props Object\n    const { classes } = props\n    const { \n        sagaRegistration, \n        setStateRegistration, \n        setDobStateRegistration\n    } = props\n    const { \n        mobileNumber, \n        firstName, \n        lastName, \n        isFetchingApi, \n        gender, \n        email,\n        showLoginButton\n    } = props\n    const { errorCode, errorMessage, setErrorMessage, hideErrorMessage } = props\n\n    //State Logic On Validate Form\n    const handleCheckMobileNumber = () => {\n        if (mobileNumber == '')\n        setErrorMessage(201, 'Mobile number is required')\n    }\n    \n    const handleCheckFirstName = () => {\n        if (firstName == '')\n        setErrorMessage(202, 'First name is required')\n    }\n\n    const handleCheckLastName = () => {\n        if (lastName == '')\n        setErrorMessage(203, 'Last name is required')\n    }\n\n    const handleCheckEmail = () => {\n        if(email == '')\n        setErrorMessage(304, 'Email is required and should valid email address')\n    }\n    \n    //Style logic reducing the size screen\n    const { width } = WindowDimmension()\n    const smSize = (width) => {\n        if (width < 1208 && width > 786) return 6\n        if (width < 786) return 12\n        return 6\n    }\n\n    function RenderTitle() {\n        return(\n            <Typography  variant=\"h5\" component=\"h1\" className={classes.title} color=\"primary\">\n                Registration\n            </Typography>\n        )\n    }\n\n    function BlockedScreen(props) {\n        if(props.show) {\n            return(\n                <Grid item xs={12} sm={12} className={classes.gridBlock}></Grid>\n            )\n        }\n\n        return <div></div>\n    }\n\n    return(\n        \n        <Container sm={12}>\n            <BlockedScreen show={showLoginButton}/>\n            <Grid item xs={12} sm={smSize(width)} className={classes.grid}>\n                <Paper elevation={0} className={classes.paper}>\n                    <RenderTitle></RenderTitle>\n                    {\n                        errorCode==201 && errorMessage !== '' &&\n                        <ErrorComponent hide={hideErrorMessage} message={errorMessage}></ErrorComponent>\n                    }\n                    <InputText\n                        label='Mobile number' \n                        width={width}\n                        onBlur={handleCheckMobileNumber}\n                        value={mobileNumber}\n                        onChange={(val) => setStateRegistration('mobileNumber', remapMobileNumber(val))}/>\n                    {\n                        errorCode==202 && errorMessage !== '' &&\n                        <ErrorComponent hide={hideErrorMessage} message={errorMessage}></ErrorComponent>\n                    }\n                    <InputText \n                        label='First name'\n                        width={width}\n                        onBlur={handleCheckFirstName}\n                        value={firstName}\n                        onChange={(val) => setStateRegistration('firstName', val)} />\n                    {\n                        errorCode==203 && errorMessage !== '' &&\n                        <ErrorComponent hide={hideErrorMessage} message={errorMessage}></ErrorComponent>\n                    }\n                    <InputText\n                        label='Last name'\n                        width={width}\n                        onBlur={handleCheckLastName}\n                        value={lastName}\n                        onChange={(val) => setStateRegistration('lastName', val)} />\n                    <DobButton \n                        onChangeMonth={(value) => setDobStateRegistration('month', value)}\n                        onChangeDay={(value) => setDobStateRegistration('day', value)}\n                        onChangeYear={(value) => setDobStateRegistration('year', value)} />\n                    <GenderOptions\n                        checked={gender}\n                        onChange={(value) => setStateRegistration('gender', value)} />\n                    {\n                        errorCode==204 && errorMessage !== '' &&\n                        <ErrorComponent hide={hideErrorMessage} message={errorMessage}></ErrorComponent>\n                    }\n                    <InputText\n                        label='Email'\n                        width={width}\n                        onBlur={handleCheckEmail}\n                        value={email}\n                        onChange={(val) => {\n                            const email = validateEmail(val)\n                            const errMsg = MessagingError.email.isRequired\n                            if(!email) {\n                                setErrorMessage(errMsg.error, errMsg.message)\n                            } else {\n                                hideErrorMessage()\n                            }\n                            setStateRegistration('email', val)\n                        }} />\n                    <Button loading={isFetchingApi} color=\"secondary\" label={'Register'} onClick={() => {\n                        sagaRegistration()\n                    }}/>\n                </Paper>\n            </Grid>\n        </Container>\n    )\n}\n\nconst mtp = ({ErrorHandling, Registration}) => {\n    const {\n        errorCode,\n        errorMessage\n    } = ErrorHandling\n\n    const { mobileNumber,\n        firstName,\n        lastName,\n        dob,\n        gender,\n        email,\n        showLoginButton,\n        isFetchingApi\n    } = Registration\n\n    return { \n        errorCode, \n        errorMessage, \n        mobileNumber, \n        firstName, \n        lastName,\n        dob,\n        gender,\n        email,\n        showLoginButton,\n        isFetchingApi\n    }\n}\n\nexport default connect(mtp, {\n    sagaRegistration,\n    setStateRegistration, \n    setDobStateRegistration,\n    setErrorMessage,\n    hideErrorMessage\n})(withStyles(styles)(RegistrationForm))","import {\n    SHOW_ERROR_MESSAGE,\n    HIDE_ERROR_MESSAGE,\n    SET_ERROR_MESSAGE\n} from '../constant/ErrorHandling'\n\n/**\n * Show the error message alert component\n * related on reducer state ErrorHandling\n */\nexport const showErrorMessage = () => {\n    return {\n        type: SHOW_ERROR_MESSAGE\n    }\n}\n\n/**\n * Hide the message alert component \n * related on reducer state ErrorHandling\n */\nexport const hideErrorMessage = () => {\n    return {\n        type: HIDE_ERROR_MESSAGE\n    }\n}\n\n/**\n * Set the errorCode and errorMessage state \n * related on reducer state ErrorHandling\n * @param {String} message\n */\nexport const setErrorMessage = (code: Number, message: String) => {\n    return {\n        type: SET_ERROR_MESSAGE,\n        payload: { code, message }\n    }\n}","/**\n * Before register all field should be checked\n * This will return error message if not valid\n * @param {Object} state \n */\nexport const checkRequiredValidation = (state) => {\n    if (state.mobileNumber == '') return {\n        isValid: false,\n        message: 'Please enter mobile phone number'\n    }\n\n    else if (state.firstName == '') return {\n        isValid: false,\n        message: 'Please enter first name'\n    }\n\n    else if (state.lastName == '') return {\n        isValid: false,\n        message: 'Please enter last name'\n    }\n\n    else if (state.email == '') return {\n        isValid: false,\n        message: 'Please enter email address'\n    }\n\n    else return { isValid: true, message: 'Success'}\n}\n\n/**\n * Produce input as a 62 in first key\n * @param {String} mobileNumber \n */\nexport const remapMobileNumber = (mobileNumber) => {\n    var totalArr = mobileNumber.length\n    var firstDigit = mobileNumber.substr(0, 1)\n    if(firstDigit == '0') {\n        var number = mobileNumber.substr(1, totalArr)\n        return `62${number}`\n    }\n    return mobileNumber\n}\n\n/**\n * Email validate with min 6 char\n * @param {String} email \n */\nexport function validateEmail(email) {\n    if(email.length > 6) {\n        let data = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{1,6})+$/;\n        if (data.test(String(email).toLowerCase()) === false) return false;\n        return true;\n    }\n    return true;\n}","import Colors from '../constant/Colors'\n\nexport default {\n    palette: {\n        primary: {\n            light: Colors.primary,\n            main: Colors.primary,\n            dark: Colors.primary,\n            contrastText: '#fff'\n        },\n        secondary: {\n            light: Colors.secondary,\n            main: Colors.secondary,\n            dark: Colors.secondary,\n            contrastText: '#fff'\n        },\n        error: {\n            light: Colors.error,\n            main: Colors.error,\n            dark: Colors.error,\n            contrastText: '#fff'\n        },\n        success: {\n            light: Colors.success,\n            main: Colors.success,\n            dark: Colors.success,\n            contrastText: '#fff'\n        },\n    },\n    status: {\n        danger: 'orange',\n    },\n    \n    typography: {\n        button: {\n            fontWeight: 400,\n            textAlign: 'capitalize'\n        },\n    }\n};\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Colors from '../constant/Colors'\nimport Button from '../coreComponent/Button'\nimport { connect } from 'react-redux'\nimport { hideLoginButtonRegistration } from '../actions/Registration'\nconst Style = {\n    footer: {\n        marginTop: 30, \n        width: '100%',\n        padding: 30,\n        background:\n        Colors.secondary,\n        contentAlign: 'center'\n    },\n    \n    footerTitle: { \n        color: Colors.white, \n        textAlign: 'center'\n    }\n}\n\n/**\n * Render the button login component\n * @param {Function} props \n */\nfunction ButtonLogin(props) {\n    const { action } = props\n    return(\n        <Button \n            label={'Login'} \n            onClick={() => {\n                action()\n                props.history.push('/login')\n            }} />\n    )\n}\n\n/**\n * Render the content of footer\n */\nfunction ContentFooter() {\n    return(\n        <h1 style={Style.footerTitle}>Footer</h1>\n    )\n}\n\n/**\n * Connected to reducer Registration\n * The Button login component is show only\n * success registration process\n * @param {Object} props \n */\nfunction Footer(props) {\n    const {hideLoginButtonRegistration, showLoginButton} = props\n    return(\n        <div style={Style.footer}>\n            {\n                showLoginButton ? <ButtonLogin action={hideLoginButtonRegistration} {...props}/> : <ContentFooter />\n            }\n        </div>\n    )\n}\n\nFooter.propTypes = {\n    showLoginButton: PropTypes.bool.isRequired,\n    hideLoginButtonRegistration: PropTypes.func.isRequired\n}\n\nconst mtp = ({Registration}) => {\n    const {showLoginButton, hideLoginButtonRegistration} = Registration\n    return {showLoginButton, hideLoginButtonRegistration}\n}\n\nexport default connect(mtp, {hideLoginButtonRegistration})(Footer)","import React from 'react'\nimport RegistrationForm from '../component/RegistrationForm'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core'\nimport PrimaryTheme from '../theme/PrimaryTheme'\nimport Footer from '../component/Footer'\n\n\nfunction Registration(props) {\n    console.log('Props Registration', props)\n    let theme = createMuiTheme(PrimaryTheme)\n    return(\n        <MuiThemeProvider theme={theme}>\n            <RegistrationForm {...props} />\n            <Footer {...props} />\n        </MuiThemeProvider>\n    )\n}\n\nexport default Registration","import React from 'react'\nimport Footer from '../component/Footer'\nimport Colors from '../constant/Colors'\n\nconst Style = {\n    container: {\n        width: '100vw',\n        height: '100vh'\n    },\n    login: {\n        background: Colors.greySoft,\n        width: '100%',\n        height: 500\n    },\n    titleLogin: {\n        color: Colors.primary,\n        textAlign: 'center'\n    },\n    link: {\n        marginTop: 15,\n        padding: 15,\n        background: Colors.primary,\n        color: Colors.white,\n        margin: '0px auto',\n        display: 'table',\n        textDecoration: 'none',\n        borderRadius: 5\n    }\n}\n\nfunction Login(props) {\n    console.log('Props login', props)\n    function linkHover(e) {\n        e.target.style.background = Colors.secondary\n    }\n\n    function linkDefault(e) {\n        e.target.style.background = Colors.primary\n    }\n\n    return(\n        <div style={Style.container}>\n            <div style={Style.login}>\n                <h4 style={Style.titleLogin}>This is login page</h4>\n                <a onMouseOver={linkHover} onMouseOut={linkDefault} style={Style.link} href=\"#\" onClick={() => props.history.goBack()}>Back to register</a>\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nexport default Login","import React from 'react'\nimport { Provider, ReactReduxContext} from 'react-redux'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { ConnectedRouter } from 'connected-react-router'\nimport './css/Main.css'\nimport configureStore, { history } from './store'\nimport Registration from '../src/template/Registration'\nimport Login from '../src/template/Login'\n\n\nconst store = configureStore()\n\nfunction App({ history, context }) {\n    return(\n        <ConnectedRouter history={history} context={context}>\n            <Switch>\n                <Route exact path=\"/mitraistestfrontend\" render={() => <Redirect to=\"/root\" />} />\n                <Route path=\"/root\" render={({ staticContext, ...props}) => <Registration {...props} />} />\n                <Route path=\"/login\" render={({ staticContext, ...props}) => <Login {...props}/>} />\n            </Switch>\n        </ConnectedRouter>\n    )\n}\n\nfunction MitraisApp() {\n    return(\n        <Provider store={store} context={ReactReduxContext}>\n            <App history={history} context={ReactReduxContext} />\n        </Provider>\n    )\n}\n\nexport default MitraisApp","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}